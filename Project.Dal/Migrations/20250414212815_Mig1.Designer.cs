// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Dal.ContextClasses;

#nullable disable

namespace Project.Dal.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250414212815_Mig1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "0afacafa-afb3-4834-9b79-1b1c671cd130",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "474dff22-be64-4c7a-970a-7bb0c3002093",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1b646898-059c-417f-8c98-249c5c143135",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 463, DateTimeKind.Local).AddTicks(6425),
                            Email = "bilgehotel@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BILGEHOTEL@EMAIL.COM",
                            NormalizedUserName = "BILGEHOTEL",
                            PasswordHash = "AQAAAAIAAYagAAAAEMyWVgJSVJD3FIo7LKTblussGWFrxOJU2sqEPOpUy6gndwvOZsvJ6sh7wCFFnk7btQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d5da1df4-e012-4438-a0f0-dd800110df6f",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "bilgehotel"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "f67f4d83-90fd-4578-b504-07aa5c585d76",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(6635),
                            Email = "testmember@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TESTMEMBER@EMAIL.COM",
                            NormalizedUserName = "TESTMEMBER",
                            PasswordHash = "AQAAAAIAAYagAAAAEORNWKNEz85QtcKDATSW3FlJ3UgVUQleTgLU+nivpuJUJN5ATnQ8gPZkOgQay9VyAQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dad4f2cd-6d9e-41c2-b85c-a67cb443e9a9",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "testmember"
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("AppUserProfiles");
                });

            modelBuilder.Entity("Project.Entities.Models.DatabaseBackupLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("DatabaseBackupLogs");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("Shift")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Sıran Söğüt Sokak 48, Kırklareli, Kongo",
                            BirthDate = new DateTime(2002, 10, 7, 19, 56, 55, 768, DateTimeKind.Local).AddTicks(2508),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9403),
                            FirstName = "Arnaç",
                            HireDate = new DateTime(2015, 2, 5, 9, 23, 52, 300, DateTimeKind.Local).AddTicks(2269),
                            LastName = "Erginsoy",
                            PhoneNumber = "+905749619739",
                            Position = "Resepsiyonist",
                            Salary = 58148.85m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Kekeçoğlu Sokak 80c, Mardin, Palau Adaları",
                            BirthDate = new DateTime(1981, 11, 17, 15, 34, 28, 726, DateTimeKind.Local).AddTicks(7240),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9496),
                            FirstName = "İrtiş",
                            HireDate = new DateTime(2020, 10, 18, 6, 33, 14, 359, DateTimeKind.Local).AddTicks(4560),
                            LastName = "Orbay",
                            PhoneNumber = "+905559182229",
                            Position = "Resepsiyonist",
                            Salary = 41583.96m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Sıran Söğüt Sokak 509, Tekirdağ, Kuveyt",
                            BirthDate = new DateTime(1999, 5, 14, 10, 52, 35, 256, DateTimeKind.Local).AddTicks(3108),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9552),
                            FirstName = "Kezlik",
                            HireDate = new DateTime(2021, 10, 22, 23, 32, 26, 983, DateTimeKind.Local).AddTicks(1503),
                            LastName = "Poçan",
                            PhoneNumber = "+905126509279",
                            Position = "Resepsiyonist",
                            Salary = 58277.86m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Ali Çetinkaya Caddesi 6, Kütahya, Çad",
                            BirthDate = new DateTime(1992, 9, 10, 23, 42, 56, 193, DateTimeKind.Local).AddTicks(6091),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9631),
                            FirstName = "Arsıl",
                            HireDate = new DateTime(2021, 7, 28, 21, 4, 52, 968, DateTimeKind.Local).AddTicks(7611),
                            LastName = "Taşçı",
                            PhoneNumber = "+905678154976",
                            Position = "Resepsiyonist",
                            Salary = 52338.47m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "Nalbant Sokak 39, Nevşehir, Endonezya",
                            BirthDate = new DateTime(1968, 6, 27, 13, 14, 11, 81, DateTimeKind.Local).AddTicks(7182),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9707),
                            FirstName = "Atmaca",
                            HireDate = new DateTime(2020, 12, 26, 12, 11, 46, 619, DateTimeKind.Local).AddTicks(1505),
                            LastName = "Arslanoğlu",
                            PhoneNumber = "+905774427687",
                            Position = "Resepsiyonist",
                            Salary = 53128.67m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Nalbant Sokak 96a, Gümüşhane, Bahreyn",
                            BirthDate = new DateTime(1992, 10, 26, 1, 3, 35, 606, DateTimeKind.Local).AddTicks(1323),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9756),
                            FirstName = "Asığ",
                            HireDate = new DateTime(2022, 11, 25, 18, 29, 33, 252, DateTimeKind.Local).AddTicks(206),
                            LastName = "Tahincioğlu",
                            PhoneNumber = "+905050231749",
                            Position = "Resepsiyonist",
                            Salary = 52850.14m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "Alparslan Türkeş Bulvarı 16, Isparta, Letonya",
                            BirthDate = new DateTime(1998, 3, 23, 5, 29, 12, 995, DateTimeKind.Local).AddTicks(1366),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9821),
                            FirstName = "Alptunga",
                            HireDate = new DateTime(2017, 2, 27, 12, 14, 29, 717, DateTimeKind.Local).AddTicks(6096),
                            LastName = "Eronat",
                            PhoneNumber = "+905533851809",
                            Position = "Resepsiyonist",
                            Salary = 52492.24m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "Mevlana Sokak 9, Şırnak, Karadağ",
                            BirthDate = new DateTime(2003, 5, 22, 21, 16, 16, 370, DateTimeKind.Local).AddTicks(4947),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9910),
                            FirstName = "Barbulsun",
                            HireDate = new DateTime(2017, 8, 26, 18, 12, 46, 925, DateTimeKind.Local).AddTicks(7326),
                            LastName = "Okur",
                            PhoneNumber = "+905341855403",
                            Position = "Temizlik Görevlisi",
                            Salary = 32624.63m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = "Sevgi Sokak 13a, Çanakkale, Avusturya",
                            BirthDate = new DateTime(2001, 7, 9, 22, 13, 20, 20, DateTimeKind.Local).AddTicks(422),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 424, DateTimeKind.Local).AddTicks(9965),
                            FirstName = "Eğrim",
                            HireDate = new DateTime(2015, 9, 18, 18, 29, 1, 504, DateTimeKind.Local).AddTicks(9913),
                            LastName = "Evliyaoğlu",
                            PhoneNumber = "+905325992954",
                            Position = "Temizlik Görevlisi",
                            Salary = 34873.84m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "Harman Yolu Sokak  04b, Tekirdağ, Solomon Adaları",
                            BirthDate = new DateTime(1997, 3, 14, 19, 36, 56, 534, DateTimeKind.Local).AddTicks(2431),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(50),
                            FirstName = "Ayaçı",
                            HireDate = new DateTime(2017, 11, 30, 5, 24, 18, 210, DateTimeKind.Local).AddTicks(3729),
                            LastName = "Erginsoy",
                            PhoneNumber = "+905984540202",
                            Position = "Temizlik Görevlisi",
                            Salary = 29926.08m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            Address = "Kekeçoğlu Sokak 4, Kars, Yeni Zelanda",
                            BirthDate = new DateTime(1976, 2, 29, 20, 41, 2, 224, DateTimeKind.Local).AddTicks(339),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(94),
                            FirstName = "Ebren",
                            HireDate = new DateTime(2020, 9, 17, 5, 19, 1, 250, DateTimeKind.Local).AddTicks(4356),
                            LastName = "Akyüz",
                            PhoneNumber = "+905716857765",
                            Position = "Temizlik Görevlisi",
                            Salary = 25743.59m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            Address = "Dağınık Evler Sokak 77a, Artvin, Dominika",
                            BirthDate = new DateTime(1992, 3, 23, 22, 18, 53, 789, DateTimeKind.Local).AddTicks(1463),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(166),
                            FirstName = "Barın",
                            HireDate = new DateTime(2018, 6, 7, 3, 37, 19, 16, DateTimeKind.Local).AddTicks(5980),
                            LastName = "Bolatlı",
                            PhoneNumber = "+905845708957",
                            Position = "Temizlik Görevlisi",
                            Salary = 30440.49m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Address = "Saygılı Sokak 36, Kilis, Lesotho",
                            BirthDate = new DateTime(1982, 10, 18, 23, 5, 8, 140, DateTimeKind.Local).AddTicks(3711),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(234),
                            FirstName = "Arslanargun",
                            HireDate = new DateTime(2017, 8, 7, 2, 50, 26, 499, DateTimeKind.Local).AddTicks(9053),
                            LastName = "Dağlaroğlu",
                            PhoneNumber = "+905933200461",
                            Position = "Temizlik Görevlisi",
                            Salary = 25181.82m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Address = "Lütfi Karadirek Caddesi 65b, Kilis, Suriye",
                            BirthDate = new DateTime(1985, 10, 12, 3, 46, 52, 22, DateTimeKind.Local).AddTicks(8259),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(279),
                            FirstName = "Aydoğmuş",
                            HireDate = new DateTime(2017, 9, 25, 17, 8, 40, 982, DateTimeKind.Local).AddTicks(9013),
                            LastName = "Adıvar",
                            PhoneNumber = "+905320943121",
                            Position = "Temizlik Görevlisi",
                            Salary = 31428.29m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            Address = "Oğuzhan Sokak 71c, Mardin, Moğolistan",
                            BirthDate = new DateTime(1973, 8, 28, 13, 49, 32, 445, DateTimeKind.Local).AddTicks(2318),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(351),
                            FirstName = "Barsgan",
                            HireDate = new DateTime(2017, 7, 7, 9, 15, 23, 237, DateTimeKind.Local).AddTicks(6595),
                            LastName = "Yılmazer",
                            PhoneNumber = "+905682252741",
                            Position = "Temizlik Görevlisi",
                            Salary = 31272.15m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            Address = "Okul Sokak 42c, Aydın, Saint Helena, İngiltere",
                            BirthDate = new DateTime(1973, 2, 10, 8, 15, 44, 811, DateTimeKind.Local).AddTicks(1212),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(417),
                            FirstName = "Basanyalavaç",
                            HireDate = new DateTime(2022, 8, 1, 14, 17, 49, 526, DateTimeKind.Local).AddTicks(8513),
                            LastName = "Dizdar ",
                            PhoneNumber = "+905512379764",
                            Position = "Temizlik Görevlisi",
                            Salary = 26507.24m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            Address = "Gül Sokak 74a, Sakarya, İsrail",
                            BirthDate = new DateTime(1987, 10, 22, 8, 58, 23, 890, DateTimeKind.Local).AddTicks(368),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(468),
                            FirstName = "Beyizçi",
                            HireDate = new DateTime(2021, 4, 25, 18, 14, 45, 568, DateTimeKind.Local).AddTicks(3990),
                            LastName = "Körmükçü",
                            PhoneNumber = "+905378435544",
                            Position = "Temizlik Görevlisi",
                            Salary = 27751.74m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            Address = "Fatih Sokak  80b, Niğde, Bermuda, İngiltere",
                            BirthDate = new DateTime(1990, 8, 6, 10, 32, 28, 818, DateTimeKind.Local).AddTicks(9031),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(535),
                            FirstName = "Çeykün",
                            HireDate = new DateTime(2021, 1, 19, 9, 18, 4, 67, DateTimeKind.Local).AddTicks(5479),
                            LastName = "Aykaç",
                            PhoneNumber = "+905546788559",
                            Position = "Temizlik Görevlisi",
                            Salary = 34034.52m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            Address = "Sarıkaya Caddesi 19, Kastamonu, Afganistan",
                            BirthDate = new DateTime(1975, 11, 7, 15, 36, 26, 341, DateTimeKind.Local).AddTicks(5929),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(596),
                            FirstName = "Arademir",
                            HireDate = new DateTime(2019, 4, 7, 13, 31, 53, 801, DateTimeKind.Local).AddTicks(6679),
                            LastName = "Topçuoğlu",
                            PhoneNumber = "+905027963839",
                            Position = "Aşçı",
                            Salary = 119277.62m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            Address = "Menekşe Sokak 13, Mardin, Slovakya",
                            BirthDate = new DateTime(1970, 1, 19, 19, 57, 26, 190, DateTimeKind.Local).AddTicks(1842),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1077),
                            FirstName = "Amrak",
                            HireDate = new DateTime(2015, 10, 20, 11, 41, 32, 189, DateTimeKind.Local).AddTicks(3772),
                            LastName = "Doğan ",
                            PhoneNumber = "+905367563886",
                            Position = "Aşçı",
                            Salary = 106494.21m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            Address = "Sevgi Sokak 10a, İstanbul, Mauritius",
                            BirthDate = new DateTime(2002, 7, 10, 5, 46, 38, 80, DateTimeKind.Local).AddTicks(3246),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1231),
                            FirstName = "Buyruç",
                            HireDate = new DateTime(2017, 1, 8, 23, 7, 1, 492, DateTimeKind.Local).AddTicks(1059),
                            LastName = "Özkara",
                            PhoneNumber = "+905901372055",
                            Position = "Aşçı",
                            Salary = 102339.94m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            Address = "Oğuzhan Sokak 06a, Konya, Folkland Adaları, İngiltere",
                            BirthDate = new DateTime(2004, 5, 10, 1, 43, 54, 445, DateTimeKind.Local).AddTicks(4505),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1315),
                            FirstName = "Burulgu",
                            HireDate = new DateTime(2021, 1, 15, 15, 56, 41, 167, DateTimeKind.Local).AddTicks(5288),
                            LastName = "Topçuoğlu",
                            PhoneNumber = "+905615057418",
                            Position = "Aşçı",
                            Salary = 118797.41m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            Address = "Atatürk Bulvarı 17a, Burdur, Sri Lanka",
                            BirthDate = new DateTime(2004, 5, 29, 18, 26, 37, 149, DateTimeKind.Local).AddTicks(5076),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1365),
                            FirstName = "Begine",
                            HireDate = new DateTime(2018, 12, 2, 8, 15, 8, 86, DateTimeKind.Local).AddTicks(4627),
                            LastName = "Baykam",
                            PhoneNumber = "+905649250840",
                            Position = "Aşçı",
                            Salary = 118519.32m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            Address = "Okul Sokak 6, Aydın, Gambiya",
                            BirthDate = new DateTime(1968, 6, 7, 3, 12, 48, 318, DateTimeKind.Local).AddTicks(2523),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1434),
                            FirstName = "Elkin",
                            HireDate = new DateTime(2024, 1, 10, 13, 51, 21, 471, DateTimeKind.Local).AddTicks(1066),
                            LastName = "Akar ",
                            PhoneNumber = "+905523837749",
                            Position = "Aşçı",
                            Salary = 104477.84m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            Address = "Bandak Sokak 96, Ordu, Bolivya",
                            BirthDate = new DateTime(1984, 11, 13, 13, 4, 1, 297, DateTimeKind.Local).AddTicks(516),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1478),
                            FirstName = "Kımızalma",
                            HireDate = new DateTime(2018, 5, 3, 2, 33, 17, 803, DateTimeKind.Local).AddTicks(9302),
                            LastName = "Başoğlu",
                            PhoneNumber = "+905244408389",
                            Position = "Aşçı",
                            Salary = 101998.08m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            Address = "Kekeçoğlu Sokak 72a, Kırklareli, Litvanya",
                            BirthDate = new DateTime(1992, 7, 26, 1, 59, 21, 774, DateTimeKind.Local).AddTicks(8810),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1578),
                            FirstName = "Berdibeğ",
                            HireDate = new DateTime(2020, 5, 30, 17, 39, 59, 393, DateTimeKind.Local).AddTicks(2936),
                            LastName = "Sezek",
                            PhoneNumber = "+905713102622",
                            Position = "Aşçı",
                            Salary = 110232.66m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            Address = "Atatürk Bulvarı 63, Çankırı, Cibuti",
                            BirthDate = new DateTime(2001, 8, 12, 18, 3, 22, 49, DateTimeKind.Local).AddTicks(8364),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1669),
                            FirstName = "Arçuk",
                            HireDate = new DateTime(2021, 1, 22, 14, 11, 14, 969, DateTimeKind.Local).AddTicks(6223),
                            LastName = "Poyrazoğlu",
                            PhoneNumber = "+905311093249",
                            Position = "Aşçı",
                            Salary = 116377.00m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            Address = "Sevgi Sokak 35a, Konya, Tacikistan",
                            BirthDate = new DateTime(1994, 2, 21, 10, 59, 18, 81, DateTimeKind.Local).AddTicks(9698),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1711),
                            FirstName = "Alperen",
                            HireDate = new DateTime(2021, 4, 4, 8, 8, 19, 170, DateTimeKind.Local).AddTicks(6634),
                            LastName = "Tekand",
                            PhoneNumber = "+905803970974",
                            Position = "Aşçı",
                            Salary = 101826.71m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            Address = "Sıran Söğüt Sokak 44b, Ankara, Somali",
                            BirthDate = new DateTime(1989, 10, 27, 2, 45, 45, 120, DateTimeKind.Local).AddTicks(4712),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1801),
                            FirstName = "Çemgen",
                            HireDate = new DateTime(2017, 2, 3, 19, 43, 29, 659, DateTimeKind.Local).AddTicks(2629),
                            LastName = "Erez",
                            PhoneNumber = "+905407551371",
                            Position = "Aşçı",
                            Salary = 117492.48m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            Address = "Atatürk Bulvarı 11, İzmir, Moğolistan",
                            BirthDate = new DateTime(1972, 12, 9, 0, 7, 15, 40, DateTimeKind.Local).AddTicks(1109),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1870),
                            FirstName = "Altınkan",
                            HireDate = new DateTime(2021, 12, 21, 10, 40, 47, 328, DateTimeKind.Local).AddTicks(8042),
                            LastName = "Kaplangı",
                            PhoneNumber = "+905796976529",
                            Position = "Garson",
                            Salary = 99074.01m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            Address = "Saygılı Sokak 91b, Karaman, Saint Helena, İngiltere",
                            BirthDate = new DateTime(1975, 7, 12, 2, 22, 31, 418, DateTimeKind.Local).AddTicks(1641),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1915),
                            FirstName = "Aybalta",
                            HireDate = new DateTime(2020, 3, 15, 15, 41, 52, 351, DateTimeKind.Local).AddTicks(6802),
                            LastName = "Tokgöz",
                            PhoneNumber = "+905138185694",
                            Position = "Garson",
                            Salary = 81867.74m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            Address = "Oğuzhan Sokak 80a, Gümüşhane, Virgin Adaları, İngiltere",
                            BirthDate = new DateTime(1992, 10, 26, 8, 16, 12, 978, DateTimeKind.Local).AddTicks(7823),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(1975),
                            FirstName = "Bumın",
                            HireDate = new DateTime(2022, 9, 27, 17, 48, 52, 743, DateTimeKind.Local).AddTicks(7707),
                            LastName = "Poçan",
                            PhoneNumber = "+905454021443",
                            Position = "Garson",
                            Salary = 91164.20m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            Address = "İsmet Paşa Caddesi 70a, Mardin, Orta Afrika Cumhuriyeti",
                            BirthDate = new DateTime(1999, 2, 20, 3, 31, 24, 852, DateTimeKind.Local).AddTicks(1308),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2067),
                            FirstName = "Baraktöre",
                            HireDate = new DateTime(2020, 12, 14, 13, 6, 44, 462, DateTimeKind.Local).AddTicks(6435),
                            LastName = "Tunçeri",
                            PhoneNumber = "+905231251523",
                            Position = "Garson",
                            Salary = 83583.27m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            Address = "Tevfik Fikret Caddesi 875, Muş, Bangladeş",
                            BirthDate = new DateTime(1993, 4, 10, 10, 12, 39, 304, DateTimeKind.Local).AddTicks(7401),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2117),
                            FirstName = "Bıtaybıkı",
                            HireDate = new DateTime(2020, 9, 1, 0, 13, 39, 902, DateTimeKind.Local).AddTicks(7408),
                            LastName = "Demirbaş",
                            PhoneNumber = "+905872960943",
                            Position = "Garson",
                            Salary = 94315.74m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            Address = "Nalbant Sokak 514, Bursa, Nijer",
                            BirthDate = new DateTime(1996, 7, 2, 11, 45, 9, 48, DateTimeKind.Local).AddTicks(7104),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2199),
                            FirstName = "Başgan",
                            HireDate = new DateTime(2017, 1, 17, 13, 27, 44, 922, DateTimeKind.Local).AddTicks(3151),
                            LastName = "Dağdaş",
                            PhoneNumber = "+905951996149",
                            Position = "Garson",
                            Salary = 76461.26m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            Address = "Okul Sokak 32a, İstanbul, Nijerya",
                            BirthDate = new DateTime(1982, 3, 11, 20, 54, 23, 739, DateTimeKind.Local).AddTicks(756),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2266),
                            FirstName = "Batu",
                            HireDate = new DateTime(2015, 11, 2, 9, 51, 55, 179, DateTimeKind.Local).AddTicks(1194),
                            LastName = "Barbarosoğlu",
                            PhoneNumber = "+905707668126",
                            Position = "Garson",
                            Salary = 70702.91m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            Address = "Köypınar Sokak 51b, Sakarya, İran",
                            BirthDate = new DateTime(2001, 5, 24, 12, 9, 1, 435, DateTimeKind.Local).AddTicks(768),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2310),
                            FirstName = "Ebkızı",
                            HireDate = new DateTime(2016, 6, 11, 12, 56, 56, 547, DateTimeKind.Local).AddTicks(4816),
                            LastName = "Koçyiğit",
                            PhoneNumber = "+905050562503",
                            Position = "Garson",
                            Salary = 71822.44m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            Address = "Kekeçoğlu Sokak 3, Kütahya, Svaziland",
                            BirthDate = new DateTime(1972, 7, 24, 12, 30, 14, 161, DateTimeKind.Local).AddTicks(9467),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2376),
                            FirstName = "Barçan",
                            HireDate = new DateTime(2020, 11, 27, 9, 15, 21, 576, DateTimeKind.Local).AddTicks(8300),
                            LastName = "Avan",
                            PhoneNumber = "+905949656733",
                            Position = "Garson",
                            Salary = 81510.88m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            Address = "Dağınık Evler Sokak 5, Bingöl, Marşal Adaları",
                            BirthDate = new DateTime(1986, 10, 15, 0, 30, 52, 246, DateTimeKind.Local).AddTicks(5350),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2469),
                            FirstName = "Ekeç",
                            HireDate = new DateTime(2016, 9, 19, 23, 5, 4, 984, DateTimeKind.Local).AddTicks(7966),
                            LastName = "Polat",
                            PhoneNumber = "+905812585472",
                            Position = "Garson",
                            Salary = 97198.54m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            Address = "Ülkü Sokak 44a, Bitlis, Moğolistan",
                            BirthDate = new DateTime(1998, 10, 23, 23, 21, 41, 80, DateTimeKind.Local).AddTicks(7147),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2515),
                            FirstName = "Iyıktağ",
                            HireDate = new DateTime(2014, 11, 6, 5, 38, 14, 430, DateTimeKind.Local).AddTicks(1497),
                            LastName = "Koç",
                            PhoneNumber = "+905198593148",
                            Position = "Garson",
                            Salary = 97783.97m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            Address = "İbn-i Sina Sokak 5, Bursa, Virgin Adaları, Amerika",
                            BirthDate = new DateTime(1972, 12, 12, 13, 57, 20, 665, DateTimeKind.Local).AddTicks(1055),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2603),
                            FirstName = "Bargan",
                            HireDate = new DateTime(2015, 3, 25, 15, 40, 17, 195, DateTimeKind.Local).AddTicks(4748),
                            LastName = "Beşerler",
                            PhoneNumber = "+905588772988",
                            Position = "Garson",
                            Salary = 89700.21m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            Address = "Bayır Sokak 30a, Hatay, Gine",
                            BirthDate = new DateTime(2000, 3, 27, 20, 8, 56, 972, DateTimeKind.Local).AddTicks(3345),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2645),
                            FirstName = "Barkdurmuş",
                            HireDate = new DateTime(2021, 3, 9, 9, 47, 41, 43, DateTimeKind.Local).AddTicks(5959),
                            LastName = "Öymen",
                            PhoneNumber = "+905094714287",
                            Position = "Garson",
                            Salary = 74879.91m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            Address = "Sarıkaya Caddesi 8, Elazığ, Kongo",
                            BirthDate = new DateTime(1990, 9, 17, 15, 43, 52, 665, DateTimeKind.Local).AddTicks(1524),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2730),
                            FirstName = "Buzaçtutuk",
                            HireDate = new DateTime(2021, 5, 21, 0, 29, 35, 395, DateTimeKind.Local).AddTicks(4881),
                            LastName = "Öztuna",
                            PhoneNumber = "+905179928195",
                            Position = "Elektrikçi",
                            Salary = 117052.50m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            Address = "Ergenekon Sokak   73, Van, Ruanda",
                            BirthDate = new DateTime(1977, 12, 26, 10, 36, 56, 925, DateTimeKind.Local).AddTicks(3925),
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 425, DateTimeKind.Local).AddTicks(2796),
                            FirstName = "Barçadoğdu",
                            HireDate = new DateTime(2018, 9, 17, 15, 53, 16, 590, DateTimeKind.Local).AddTicks(507),
                            LastName = "Uca",
                            PhoneNumber = "+905426642773",
                            Position = "IT Sorumlusu",
                            Salary = 167958.34m,
                            Shift = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.ExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7079),
                            Description = "Günlük sınırsız spa kullanımı.",
                            Name = "Spa Kullanımı",
                            Price = 3000m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7081),
                            Description = "24 saat oda servisi. Tüm yemek siparişleri dahildir.",
                            Name = "Oda Servisi",
                            Price = 1500m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7082),
                            Description = "Minibardaki içecekler ve atıştırmalıklar dahil.",
                            Name = "Minibar Kullanımı",
                            Price = 1000m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7084),
                            Description = "Gidiş-dönüş özel araç transferi.",
                            Name = "Havalimanı Transferi",
                            Price = 5000m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7085),
                            Description = "Konaklama süresince ücretsiz çamaşır ve kuru temizleme hizmeti.",
                            Name = "Çamaşırhane Hizmeti",
                            Price = 500m,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7094),
                            Description = "Ekstra günlük temizlik ve hijyen paketi.",
                            Name = "Günlük Oda Temizliği",
                            Price = 500m,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7095),
                            Description = "Özel şezlong ve plaj hizmetleri.",
                            Name = "Özel Plaj Alanı",
                            Price = 7500m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("InventoryItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Intel i5 - 8GB RAM",
                            EmployeeId = 44,
                            Location = "Resepsiyon",
                            Name = "Masaüstü PC",
                            SerialNumber = "PC-RSP-001",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Intel i5 - 8GB RAM",
                            EmployeeId = 44,
                            Location = "Resepsiyon",
                            Name = "Masaüstü PC",
                            SerialNumber = "PC-RSP-002",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Intel i3 - 4GB RAM",
                            EmployeeId = 44,
                            Location = "Resepsiyon",
                            Name = "Masaüstü PC",
                            SerialNumber = "PC-RSP-003",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Intel i7 - 16GB RAM",
                            EmployeeId = 44,
                            Location = "Resepsiyon",
                            Name = "Masaüstü PC",
                            SerialNumber = "PC-RSP-004",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "All-in-One Dokunmatik",
                            EmployeeId = 44,
                            Location = "Bar",
                            Name = "Bar Terminali",
                            SerialNumber = "PC-BAR-001",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Mini PC - Fanless",
                            EmployeeId = 44,
                            Location = "Havuzbaşı snackbar",
                            Name = "Havuzbaşı PC",
                            SerialNumber = "PC-HAVUZ-001",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Dell Latitude",
                            EmployeeId = 44,
                            Location = "Yönetim Ofisi",
                            Name = "Yönetici Laptop",
                            SerialNumber = "PC-OFC-001",
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Lenovo ThinkPad",
                            EmployeeId = 44,
                            Location = "Yönetim Ofisi",
                            Name = "Yönetici Laptop",
                            SerialNumber = "PC-OFC-002",
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "HP EliteBook",
                            EmployeeId = 44,
                            Location = "Yönetim Ofisi",
                            Name = "Yönetici Laptop",
                            SerialNumber = "PC-OFC-003",
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Core i5 - 8GB",
                            EmployeeId = 44,
                            Location = "Yönetim Ofisi",
                            Name = "Yönetici Masaüstü",
                            SerialNumber = "PC-OFC-004",
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Core i7 - 16GB",
                            EmployeeId = 44,
                            Location = "Yönetim Ofisi",
                            Name = "Yönetici Masaüstü",
                            SerialNumber = "PC-OFC-005",
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            Category = "Bilgisayar",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Core i3 - 4GB",
                            EmployeeId = 44,
                            Location = "Yönetim Ofisi",
                            Name = "Yönetici Masaüstü",
                            SerialNumber = "PC-OFC-006",
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Category = "Server",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "Windows Server 2003",
                            EmployeeId = 44,
                            Location = "Teknik Sunucu Odası",
                            Name = "Mail Server",
                            SerialNumber = "SRV-001",
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Category = "Server",
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7258),
                            Description = "XP Professional - Domain dışı",
                            EmployeeId = 44,
                            Location = "Teknik Sunucu Odası",
                            Name = "Wireless Router Server",
                            SerialNumber = "SRV-002",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7027),
                            Description = "Kahvaltı, öğle ve akşam yemeği dahil.",
                            Name = "Tam Pansiyon",
                            PriceMultiplier = 1.2m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 501, DateTimeKind.Local).AddTicks(7030),
                            Description = "Tüm yemekler, alkollü-alkolsüz içecekler ve otelin sunduğu belirli hizmetler dahil.",
                            Name = "Her Şey Dahil",
                            PriceMultiplier = 1.5m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.ReservationExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtraServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExtraServiceId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("HasAirConditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBalcony")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHairDryer")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMinibar")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTV")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("money");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2444),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "100",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2447),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "101",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2448),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "102",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2448),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "103",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2449),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "104",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2451),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "105",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2452),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "106",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2452),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "107",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2453),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "108",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2454),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "109",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2457),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "110",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2458),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "111",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2458),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "112",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2459),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "113",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2459),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "114",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2460),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "115",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2460),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "116",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2462),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "117",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2462),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "118",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2463),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1500m,
                            RoomNumber = "119",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2465),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "200",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2466),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "201",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2466),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "202",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2467),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "203",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2468),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "204",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2468),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "205",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2469),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "206",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2469),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "207",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2471),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "208",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2471),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1200m,
                            RoomNumber = "209",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2473),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "210",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2474),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "211",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2474),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "212",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2476),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "213",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2477),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "214",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2477),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "215",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2478),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "216",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2478),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "217",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2479),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "218",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2480),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1800m,
                            RoomNumber = "219",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2484),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "300",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2485),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "301",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2486),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "302",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2486),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "303",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2487),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "304",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2487),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "305",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2488),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "306",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2488),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "307",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2512),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "308",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2513),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2200m,
                            RoomNumber = "309",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2515),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "310",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 52,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2516),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "311",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 53,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2517),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "312",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 54,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2517),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "313",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 55,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2518),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "314",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 56,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2519),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "315",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 57,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2519),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "316",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 58,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2520),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "317",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 59,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2521),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "318",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 60,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2521),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2500m,
                            RoomNumber = "319",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 61,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2523),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "400",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 62,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2524),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "401",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 63,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2524),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "402",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 64,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2525),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "403",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 65,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2526),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "404",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 66,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2527),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "405",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 67,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2528),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "406",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 68,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2528),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "407",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 69,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2529),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "408",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 70,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2529),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 2800m,
                            RoomNumber = "409",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 71,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2531),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 3500m,
                            RoomNumber = "410",
                            RoomStatus = 1,
                            RoomTypeId = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 72,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2532),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 3500m,
                            RoomNumber = "411",
                            RoomStatus = 1,
                            RoomTypeId = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 73,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2533),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 3500m,
                            RoomNumber = "412",
                            RoomStatus = 1,
                            RoomTypeId = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 74,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2533),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 3500m,
                            RoomNumber = "413",
                            RoomStatus = 1,
                            RoomTypeId = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 75,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2534),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 3500m,
                            RoomNumber = "414",
                            RoomStatus = 1,
                            RoomTypeId = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 76,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2534),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 3500m,
                            RoomNumber = "415",
                            RoomStatus = 1,
                            RoomTypeId = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 77,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2536),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 10000m,
                            RoomNumber = "417",
                            RoomStatus = 1,
                            RoomTypeId = 7,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2346),
                            Description = "1 adet tek kişilik yatak. Balkon ve minibar bulunmaz. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Tek Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2356),
                            Description = "1 adet büyük (duble) yatak. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Çift Kişilik (Duble)",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2357),
                            Description = "2 adet tek kişilik yatak. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Çift Kişilik (Tek Kişilik 2 Yataklı)",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2358),
                            Description = "3 adet tek kişilik yatak.  Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Üç Kişilik (Tek Kişilik 3 Yataklı)",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2359),
                            Description = "Bir tek bir duble yatak.  Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Üç Kişilik (1 Tek, 1 Duble Yataklı)",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2388),
                            Description = "1 adet büyük (duble) yatak + 2 adet tek kişilik yatak. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Dört Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 4, 15, 0, 28, 15, 423, DateTimeKind.Local).AddTicks(2389),
                            Description = "Geniş ve lüks oda. Özel oturma alanı, büyük yatak, balkon, minibar, özel banyo ve lüks hizmetler. Klima, TV, saç kurutma makinesi, WiFi ve özel hizmetler mevcuttur.",
                            Name = "Kral Dairesi",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithOne("AppUserProfile")
                        .HasForeignKey("Project.Entities.Models.AppUserProfile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.DatabaseBackupLog", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithMany("DatabaseBackupLogs")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.InventoryItem", b =>
                {
                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("InventoryItems")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("Project.Entities.Models.Payment", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithMany("Reservations")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("ManagedReservations")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Project.Entities.Models.Package", "Package")
                        .WithMany("Reservations")
                        .HasForeignKey("PackageId");

                    b.HasOne("Project.Entities.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Employee");

                    b.Navigation("Package");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.Entities.Models.ReservationExtraService", b =>
                {
                    b.HasOne("Project.Entities.Models.ExtraService", "ExtraService")
                        .WithMany("ReservationExtraServices")
                        .HasForeignKey("ExtraServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithMany("ReservationExtraServices")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.HasOne("Project.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Navigation("AppUserProfile")
                        .IsRequired();

                    b.Navigation("DatabaseBackupLogs");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Navigation("InventoryItems");

                    b.Navigation("ManagedReservations");
                });

            modelBuilder.Entity("Project.Entities.Models.ExtraService", b =>
                {
                    b.Navigation("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
