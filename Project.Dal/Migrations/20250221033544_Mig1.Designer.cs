// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Dal.ContextClasses;

#nullable disable

namespace Project.Dal.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250221033544_Mig1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "b4f09409-22c2-4d8c-9299-b5519816481d",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "4a1b0d50-3612-42e5-8b62-28e61f189da8",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "8e063270-335b-4f8b-ade3-204a1ecafeed",
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 229, DateTimeKind.Local).AddTicks(6534),
                            Email = "bilgehotel@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BILGEHOTEL@EMAIL.COM",
                            NormalizedUserName = "BILGEHOTEL",
                            PasswordHash = "AQAAAAIAAYagAAAAEPjeFelXifPg3RMX9uiKTlePu5O79zzqPH6I8QmB4QJKKzaD260r8wnqleV1lBSWOA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "36e645b6-6736-4370-806c-7270b30c6904",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "bilgehotel"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "748f7cb3-972b-478c-bb12-6152a7de2a7a",
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(1867),
                            Email = "testmember@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TESTMEMBER@EMAIL.COM",
                            NormalizedUserName = "TESTMEMBER",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ0CcPYKa/9BePjfghYxE9MqwXAMGoVrsJjWIhCft3DRI2H3aPVyciHpzaqsdoqYcg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0f7729cc-37a6-456b-9bd7-7916606e25bb",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "testmember"
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("AppUserProfiles");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("Shift")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "İsmet Paşa Caddesi 5, Elazığ, Amerika Birleşik Devletleri",
                            BirthDate = new DateTime(2004, 3, 25, 21, 24, 47, 83, DateTimeKind.Local).AddTicks(3267),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6044),
                            FirstName = "Edil",
                            HireDate = new DateTime(2023, 12, 9, 15, 11, 34, 709, DateTimeKind.Local).AddTicks(7044),
                            LastName = "Akar ",
                            PhoneNumber = "+90-209-026-6-923",
                            Salary = 131.55m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Okul Sokak 90c, Burdur, Zambiya",
                            BirthDate = new DateTime(1990, 4, 16, 20, 30, 33, 656, DateTimeKind.Local).AddTicks(8369),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6144),
                            FirstName = "Atılgan",
                            HireDate = new DateTime(2019, 2, 26, 22, 33, 42, 877, DateTimeKind.Local).AddTicks(3897),
                            LastName = "Akay",
                            PhoneNumber = "+90-911-748-11-35",
                            Salary = 145.71m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "İsmet Attila Caddesi 93c, Bitlis, Yeni Zelanda",
                            BirthDate = new DateTime(1986, 11, 15, 17, 21, 19, 563, DateTimeKind.Local).AddTicks(6089),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6203),
                            FirstName = "Erentüz",
                            HireDate = new DateTime(2018, 11, 1, 0, 48, 0, 202, DateTimeKind.Local).AddTicks(8067),
                            LastName = "Tuğluk",
                            PhoneNumber = "+90-972-869-0-452",
                            Salary = 133.71m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Bahçe Sokak 39c, Kocaeli, Monako",
                            BirthDate = new DateTime(1996, 1, 13, 11, 3, 24, 553, DateTimeKind.Local).AddTicks(4436),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6289),
                            FirstName = "Berkiş",
                            HireDate = new DateTime(2022, 7, 27, 4, 38, 51, 521, DateTimeKind.Local).AddTicks(4260),
                            LastName = "Gönültaş",
                            PhoneNumber = "+90-408-868-3-380",
                            Salary = 158.10m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "Kekeçoğlu Sokak 75b, Bartın, Grönland",
                            BirthDate = new DateTime(2007, 1, 22, 17, 14, 31, 524, DateTimeKind.Local).AddTicks(4639),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6369),
                            FirstName = "Alka",
                            HireDate = new DateTime(2014, 11, 14, 14, 13, 55, 434, DateTimeKind.Local).AddTicks(4204),
                            LastName = "Sarıoğlu",
                            PhoneNumber = "+90-524-898-6-568",
                            Salary = 126.45m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Ali Çetinkaya Caddesi 48, Uşak, Haiti",
                            BirthDate = new DateTime(1987, 4, 1, 5, 42, 6, 567, DateTimeKind.Local).AddTicks(3080),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6459),
                            FirstName = "Aşan",
                            HireDate = new DateTime(2018, 8, 2, 12, 42, 14, 271, DateTimeKind.Local).AddTicks(7194),
                            LastName = "Yazıcı",
                            PhoneNumber = "+90-169-329-09-48",
                            Salary = 146.20m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "Ali Çetinkaya Caddesi 21b, İstanbul, Bahreyn",
                            BirthDate = new DateTime(1995, 9, 10, 2, 28, 41, 467, DateTimeKind.Local).AddTicks(1716),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6518),
                            FirstName = "Kayaçık",
                            HireDate = new DateTime(2014, 4, 7, 11, 16, 4, 649, DateTimeKind.Local).AddTicks(5320),
                            LastName = "Gümüşpala",
                            PhoneNumber = "+90-480-087-66-83",
                            Salary = 127.56m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "Okul Sokak 299, Yozgat, Amerikan Samoa",
                            BirthDate = new DateTime(1985, 12, 7, 23, 50, 21, 221, DateTimeKind.Local).AddTicks(5270),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6608),
                            FirstName = "Kançı",
                            HireDate = new DateTime(2017, 2, 3, 1, 26, 2, 116, DateTimeKind.Local).AddTicks(1584),
                            LastName = "Uluhan",
                            PhoneNumber = "+90-037-783-18-76",
                            Salary = 111.01m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = "Dağınık Evler Sokak 35a, Muş, Küba",
                            BirthDate = new DateTime(1989, 1, 2, 13, 13, 47, 308, DateTimeKind.Local).AddTicks(4932),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6692),
                            FirstName = "Basan",
                            HireDate = new DateTime(2020, 8, 13, 0, 19, 37, 962, DateTimeKind.Local).AddTicks(5403),
                            LastName = "Durmaz",
                            PhoneNumber = "+90-319-743-15-07",
                            Salary = 132.46m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "Kaldırım Sokak 47, Şanlıurfa, Afganistan",
                            BirthDate = new DateTime(1981, 4, 23, 0, 54, 29, 41, DateTimeKind.Local).AddTicks(9785),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6767),
                            FirstName = "Binbeği",
                            HireDate = new DateTime(2022, 9, 26, 8, 24, 34, 441, DateTimeKind.Local).AddTicks(664),
                            LastName = "Özbir",
                            PhoneNumber = "+90-061-916-85-82",
                            Salary = 135.80m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            Address = "Kerimoğlu Sokak 93, Bursa, Filipinler",
                            BirthDate = new DateTime(1992, 5, 2, 19, 59, 23, 236, DateTimeKind.Local).AddTicks(3996),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6818),
                            FirstName = "Gökçiçek",
                            HireDate = new DateTime(2014, 4, 22, 9, 32, 59, 577, DateTimeKind.Local).AddTicks(504),
                            LastName = "Adal",
                            PhoneNumber = "+90-197-162-35-64",
                            Salary = 128.59m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            Address = "Namık Kemal Caddesi 11c, İzmir, Grönland",
                            BirthDate = new DateTime(2001, 10, 22, 1, 58, 5, 60, DateTimeKind.Local).AddTicks(8316),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6899),
                            FirstName = "Ardıç",
                            HireDate = new DateTime(2017, 10, 22, 16, 9, 22, 428, DateTimeKind.Local).AddTicks(9140),
                            LastName = "Kaya ",
                            PhoneNumber = "+90-477-756-1-639",
                            Salary = 126.85m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Address = "Bayır Sokak 27, Nevşehir, Wake Adaları, Amerika",
                            BirthDate = new DateTime(1993, 8, 26, 10, 10, 19, 83, DateTimeKind.Local).AddTicks(5473),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(6977),
                            FirstName = "Alkaşı",
                            HireDate = new DateTime(2020, 6, 12, 19, 9, 16, 979, DateTimeKind.Local).AddTicks(8783),
                            LastName = "Tokgöz",
                            PhoneNumber = "+90-247-253-83-86",
                            Salary = 128.03m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Address = "Bayır Sokak 780, Burdur, Midway Adaları, Amerika",
                            BirthDate = new DateTime(2005, 11, 17, 4, 4, 38, 965, DateTimeKind.Local).AddTicks(3024),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7060),
                            FirstName = "Kaynak",
                            HireDate = new DateTime(2023, 1, 13, 2, 8, 53, 998, DateTimeKind.Local).AddTicks(6327),
                            LastName = "Okur",
                            PhoneNumber = "+90-228-854-82-60",
                            Salary = 127.23m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            Address = "Kocatepe Caddesi 57c, Kars, Nijerya",
                            BirthDate = new DateTime(1983, 6, 24, 22, 22, 52, 884, DateTimeKind.Local).AddTicks(859),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7110),
                            FirstName = "Bürküt",
                            HireDate = new DateTime(2022, 4, 17, 12, 18, 39, 814, DateTimeKind.Local).AddTicks(4865),
                            LastName = "Kutlay",
                            PhoneNumber = "+90-977-677-0-374",
                            Salary = 129.06m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            Address = "Sevgi Sokak 70b, Kocaeli, Mikronezya",
                            BirthDate = new DateTime(1980, 7, 14, 0, 15, 35, 317, DateTimeKind.Local).AddTicks(415),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7172),
                            FirstName = "Aladağ",
                            HireDate = new DateTime(2020, 5, 30, 7, 25, 13, 709, DateTimeKind.Local).AddTicks(1496),
                            LastName = "Koçyiğit",
                            PhoneNumber = "+90-138-424-67-74",
                            Salary = 129.92m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            Address = "Bayır Sokak 29b, Adana, Mauritius",
                            BirthDate = new DateTime(1996, 8, 9, 4, 25, 51, 972, DateTimeKind.Local).AddTicks(7122),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7249),
                            FirstName = "Başak",
                            HireDate = new DateTime(2014, 10, 21, 21, 17, 50, 722, DateTimeKind.Local).AddTicks(8801),
                            LastName = "Gönültaş",
                            PhoneNumber = "+90-019-318-26-57",
                            Salary = 122.13m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            Address = "Harman Yolu Sokak  65c, Sivas, Christmas Adası , Avusturalya",
                            BirthDate = new DateTime(2003, 12, 22, 20, 52, 53, 205, DateTimeKind.Local).AddTicks(4507),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7302),
                            FirstName = "Ayaz",
                            HireDate = new DateTime(2017, 2, 27, 10, 36, 34, 161, DateTimeKind.Local).AddTicks(3013),
                            LastName = "Egeli",
                            PhoneNumber = "+90-856-777-99-35",
                            Salary = 121.18m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            Address = "Bahçe Sokak 80, Amasya, Mali",
                            BirthDate = new DateTime(1980, 6, 1, 9, 18, 3, 592, DateTimeKind.Local).AddTicks(145),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7384),
                            FirstName = "Buyançuk",
                            HireDate = new DateTime(2018, 11, 30, 18, 12, 50, 71, DateTimeKind.Local).AddTicks(5975),
                            LastName = "Demirel",
                            PhoneNumber = "+90-263-503-6-992",
                            Salary = 152.58m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            Address = "Kerimoğlu Sokak 017, Afyon, Zimbabve",
                            BirthDate = new DateTime(1983, 11, 12, 6, 43, 17, 671, DateTimeKind.Local).AddTicks(7864),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7458),
                            FirstName = "Belek",
                            HireDate = new DateTime(2022, 6, 23, 14, 31, 53, 239, DateTimeKind.Local).AddTicks(2289),
                            LastName = "Erçetin",
                            PhoneNumber = "+90-923-397-51-26",
                            Salary = 163.20m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            Address = "Oğuzhan Sokak 6, Giresun, Barbados",
                            BirthDate = new DateTime(1969, 9, 18, 13, 56, 57, 163, DateTimeKind.Local).AddTicks(5721),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7538),
                            FirstName = "Bögü",
                            HireDate = new DateTime(2020, 10, 30, 6, 23, 1, 204, DateTimeKind.Local).AddTicks(9224),
                            LastName = "Tekand",
                            PhoneNumber = "+90-069-798-8-856",
                            Salary = 151.74m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            Address = "Güven Yaka Sokak 48b, Antalya, Burundi",
                            BirthDate = new DateTime(2005, 5, 3, 9, 19, 24, 337, DateTimeKind.Local).AddTicks(8014),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7588),
                            FirstName = "Aydoğmuş",
                            HireDate = new DateTime(2019, 7, 9, 0, 35, 54, 238, DateTimeKind.Local).AddTicks(3495),
                            LastName = "Kuzucu",
                            PhoneNumber = "+90-682-069-7-301",
                            Salary = 168.88m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            Address = "Yunus Emre Sokak 83c, Tekirdağ, Martinik, Fransa",
                            BirthDate = new DateTime(2005, 9, 25, 18, 42, 57, 210, DateTimeKind.Local).AddTicks(4877),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7666),
                            FirstName = "Bayık",
                            HireDate = new DateTime(2024, 1, 25, 23, 51, 20, 18, DateTimeKind.Local).AddTicks(1043),
                            LastName = "Alyanak",
                            PhoneNumber = "+90-364-638-9-399",
                            Salary = 152.23m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            Address = "Köypınar Sokak 42c, Karaman, Ekvator Ginesi",
                            BirthDate = new DateTime(1989, 11, 1, 16, 43, 56, 465, DateTimeKind.Local).AddTicks(3891),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7740),
                            FirstName = "Batu",
                            HireDate = new DateTime(2022, 11, 21, 9, 21, 56, 398, DateTimeKind.Local).AddTicks(9847),
                            LastName = "Aydan",
                            PhoneNumber = "+90-011-731-93-37",
                            Salary = 131.63m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            Address = "Menekşe Sokak 53, İzmir, Sierra Leone",
                            BirthDate = new DateTime(1999, 1, 19, 13, 1, 37, 219, DateTimeKind.Local).AddTicks(8182),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7813),
                            FirstName = "Çankız",
                            HireDate = new DateTime(2021, 9, 14, 5, 52, 17, 645, DateTimeKind.Local).AddTicks(5414),
                            LastName = "Kılıççı",
                            PhoneNumber = "+90-152-174-74-21",
                            Salary = 137.14m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            Address = "Okul Sokak 19c, Kilis, Liechtenstein",
                            BirthDate = new DateTime(1969, 4, 21, 18, 12, 30, 691, DateTimeKind.Local).AddTicks(3997),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7860),
                            FirstName = "Alabörü",
                            HireDate = new DateTime(2016, 9, 14, 23, 17, 28, 283, DateTimeKind.Local).AddTicks(1246),
                            LastName = "Kahveci",
                            PhoneNumber = "+90-809-070-67-10",
                            Salary = 152.28m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            Address = "Nalbant Sokak 94a, Karabük, Gambiya",
                            BirthDate = new DateTime(1997, 2, 4, 19, 52, 20, 438, DateTimeKind.Local).AddTicks(9340),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(7925),
                            FirstName = "Asrı",
                            HireDate = new DateTime(2015, 5, 8, 4, 40, 7, 107, DateTimeKind.Local).AddTicks(1545),
                            LastName = "Özberk",
                            PhoneNumber = "+90-083-189-84-39",
                            Salary = 161.60m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            Address = "Oğuzhan Sokak 19c, Çankırı, Nijerya",
                            BirthDate = new DateTime(2003, 8, 19, 16, 0, 34, 952, DateTimeKind.Local).AddTicks(8395),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8004),
                            FirstName = "Çağlayan",
                            HireDate = new DateTime(2020, 4, 25, 7, 30, 39, 566, DateTimeKind.Local).AddTicks(8962),
                            LastName = "Kutlay",
                            PhoneNumber = "+90-612-812-6-244",
                            Salary = 134.36m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            Address = "Sevgi Sokak 09a, Konya, Saint Helena, İngiltere",
                            BirthDate = new DateTime(2000, 6, 11, 12, 5, 16, 666, DateTimeKind.Local).AddTicks(503),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8089),
                            FirstName = "Bilgeçikşin",
                            HireDate = new DateTime(2021, 1, 20, 17, 28, 17, 717, DateTimeKind.Local).AddTicks(6134),
                            LastName = "Gümüşpala",
                            PhoneNumber = "+90-383-266-60-60",
                            Salary = 157.60m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            Address = "Namık Kemal Caddesi 4, Zonguldak, Kenya",
                            BirthDate = new DateTime(1999, 5, 14, 8, 52, 55, 785, DateTimeKind.Local).AddTicks(7380),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8141),
                            FirstName = "Akı",
                            HireDate = new DateTime(2021, 9, 6, 19, 31, 8, 833, DateTimeKind.Local).AddTicks(2849),
                            LastName = "Tuğluk",
                            PhoneNumber = "+90-801-970-5-565",
                            Salary = 124.64m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            Address = "Mevlana Sokak 30c, Karabük, Kongo Demokratik Cumhuriyeti",
                            BirthDate = new DateTime(1979, 10, 31, 21, 47, 2, 346, DateTimeKind.Local).AddTicks(5318),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8213),
                            FirstName = "Bumın",
                            HireDate = new DateTime(2018, 10, 10, 14, 31, 25, 741, DateTimeKind.Local).AddTicks(7805),
                            LastName = "Biçer",
                            PhoneNumber = "+90-310-362-5-026",
                            Salary = 110.75m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            Address = "Namık Kemal Caddesi 9, Edirne, Gambiya",
                            BirthDate = new DateTime(1967, 9, 3, 10, 41, 42, 726, DateTimeKind.Local).AddTicks(1143),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8286),
                            FirstName = "Iyıktağ",
                            HireDate = new DateTime(2014, 8, 9, 6, 23, 9, 774, DateTimeKind.Local).AddTicks(5693),
                            LastName = "Çetin",
                            PhoneNumber = "+90-528-041-3-811",
                            Salary = 105.25m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            Address = "Ali Çetinkaya Caddesi 7, Bartın, Zimbabve",
                            BirthDate = new DateTime(1999, 6, 19, 3, 47, 1, 537, DateTimeKind.Local).AddTicks(4581),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8331),
                            FirstName = "Apak",
                            HireDate = new DateTime(2021, 6, 7, 3, 32, 59, 304, DateTimeKind.Local).AddTicks(5196),
                            LastName = "Kuzucu",
                            PhoneNumber = "+90-326-478-5-537",
                            Salary = 139.57m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            Address = "Oğuzhan Sokak 81, Ağrı, Eritre",
                            BirthDate = new DateTime(1982, 9, 11, 2, 39, 41, 888, DateTimeKind.Local).AddTicks(8620),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8408),
                            FirstName = "Arkın",
                            HireDate = new DateTime(2020, 4, 21, 17, 0, 32, 769, DateTimeKind.Local).AddTicks(5846),
                            LastName = "Özberk",
                            PhoneNumber = "+90-763-719-1-079",
                            Salary = 116.21m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            Address = "Oğuzhan Sokak 88a, Hatay, Arjantin",
                            BirthDate = new DateTime(2004, 12, 15, 11, 27, 32, 180, DateTimeKind.Local).AddTicks(1706),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8484),
                            FirstName = "Baçara",
                            HireDate = new DateTime(2015, 1, 23, 7, 25, 4, 389, DateTimeKind.Local).AddTicks(4064),
                            LastName = "Numanoğlu",
                            PhoneNumber = "+90-785-654-7-504",
                            Salary = 120.36m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            Address = "İsmet Paşa Caddesi 1, Muğla, Liechtenstein",
                            BirthDate = new DateTime(1971, 10, 30, 15, 18, 39, 803, DateTimeKind.Local).AddTicks(5683),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8558),
                            FirstName = "Arı",
                            HireDate = new DateTime(2017, 6, 11, 17, 40, 55, 20, DateTimeKind.Local).AddTicks(4104),
                            LastName = "Karaer",
                            PhoneNumber = "+90-346-255-4-417",
                            Salary = 123.62m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            Address = "Barış Sokak 043, Kayseri, Umman",
                            BirthDate = new DateTime(1967, 3, 28, 13, 33, 53, 126, DateTimeKind.Local).AddTicks(7230),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8609),
                            FirstName = "Adsız",
                            HireDate = new DateTime(2017, 8, 12, 23, 52, 36, 735, DateTimeKind.Local).AddTicks(7748),
                            LastName = "Dalkıran",
                            PhoneNumber = "+90-612-749-6-284",
                            Salary = 104.03m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            Address = "Sevgi Sokak 16, Tekirdağ, Cape Verde",
                            BirthDate = new DateTime(2005, 1, 30, 22, 48, 17, 778, DateTimeKind.Local).AddTicks(3051),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8674),
                            FirstName = "Akbaş",
                            HireDate = new DateTime(2015, 5, 3, 6, 37, 40, 42, DateTimeKind.Local).AddTicks(2130),
                            LastName = "Taşlı",
                            PhoneNumber = "+90-764-507-36-60",
                            Salary = 123.12m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            Address = "Dağınık Evler Sokak 24c, Edirne, Birleşik Arap Emirlikleri",
                            BirthDate = new DateTime(2004, 9, 17, 1, 44, 12, 500, DateTimeKind.Local).AddTicks(8985),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8749),
                            FirstName = "Akkun",
                            HireDate = new DateTime(2016, 9, 22, 12, 11, 0, 690, DateTimeKind.Local).AddTicks(8623),
                            LastName = "Kahveci",
                            PhoneNumber = "+90-975-950-7-195",
                            Salary = 115.34m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            Address = "Sevgi Sokak 629, Tunceli, Litvanya",
                            BirthDate = new DateTime(1998, 3, 27, 9, 59, 36, 533, DateTimeKind.Local).AddTicks(3479),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8836),
                            FirstName = "Alayunt",
                            HireDate = new DateTime(2023, 5, 25, 22, 54, 58, 737, DateTimeKind.Local).AddTicks(7555),
                            LastName = "Kutlay",
                            PhoneNumber = "+90-406-775-9-124",
                            Salary = 115.45m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            Address = "Kaldırım Sokak 60b, Nevşehir, Bahreyn",
                            BirthDate = new DateTime(1979, 1, 22, 20, 36, 49, 385, DateTimeKind.Local).AddTicks(2757),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8882),
                            FirstName = "Atımer",
                            HireDate = new DateTime(2014, 11, 9, 11, 25, 45, 834, DateTimeKind.Local).AddTicks(8518),
                            LastName = "Çörekçi",
                            PhoneNumber = "+90-009-997-25-65",
                            Salary = 134.50m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            Address = "Ergenekon Sokak   541, Bartın, Saint Martin, Fransa",
                            BirthDate = new DateTime(1975, 7, 2, 20, 47, 56, 588, DateTimeKind.Local).AddTicks(5565),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(8958),
                            FirstName = "Akbulak",
                            HireDate = new DateTime(2018, 12, 26, 10, 41, 50, 384, DateTimeKind.Local).AddTicks(1239),
                            LastName = "Duygulu",
                            PhoneNumber = "+90-892-117-6-207",
                            Salary = 124.18m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            Address = "Kocatepe Caddesi 91c, Şanlıurfa, Sırbistan",
                            BirthDate = new DateTime(2006, 6, 24, 1, 46, 11, 126, DateTimeKind.Local).AddTicks(3053),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(9035),
                            FirstName = "Çokramayul",
                            HireDate = new DateTime(2017, 8, 17, 14, 34, 43, 450, DateTimeKind.Local).AddTicks(9717),
                            LastName = "Kaplangı",
                            PhoneNumber = "+90-697-250-87-94",
                            Salary = 167.12m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            Address = "Menekşe Sokak 6, Gümüşhane, Saint Pierre ve Miquelon, Fransa",
                            BirthDate = new DateTime(1984, 10, 22, 14, 1, 11, 167, DateTimeKind.Local).AddTicks(6705),
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 190, DateTimeKind.Local).AddTicks(9111),
                            FirstName = "Barlıbay",
                            HireDate = new DateTime(2017, 6, 16, 3, 56, 28, 493, DateTimeKind.Local).AddTicks(2563),
                            LastName = "Sinanoğlu",
                            PhoneNumber = "+90-724-018-8-826",
                            Salary = 166.41m,
                            Shift = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.ExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2226),
                            Description = "Günlük sınırsız spa kullanımı.",
                            Name = "Spa Kullanımı",
                            Price = 50m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2228),
                            Description = "24 saat oda servisi. Tüm yemek siparişleri dahildir.",
                            Name = "Oda Servisi",
                            Price = 30m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2229),
                            Description = "Minibardaki içecekler ve atıştırmalıklar dahil.",
                            Name = "Minibar Kullanımı",
                            Price = 20m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2231),
                            Description = "Gidiş-dönüş özel araç transferi.",
                            Name = "Havalimanı Transferi",
                            Price = 100m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2232),
                            Description = "Konaklama süresince ücretsiz çamaşır ve kuru temizleme hizmeti.",
                            Name = "Çamaşırhane Hizmeti",
                            Price = 40m,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2241),
                            Description = "Ekstra günlük temizlik ve hijyen paketi.",
                            Name = "Günlük Oda Temizliği",
                            Price = 25m,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2243),
                            Description = "Özel şezlong ve plaj hizmetleri.",
                            Name = "Özel Plaj Alanı",
                            Price = 35m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2181),
                            Description = "Kahvaltı, öğle ve akşam yemeği dahil.",
                            Name = "Tam Pansiyon",
                            PriceMultiplier = 1.2m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 267, DateTimeKind.Local).AddTicks(2184),
                            Description = "Tüm yemekler, alkollü-alkolsüz içecekler ve otelin sunduğu belirli hizmetler dahil.",
                            Name = "Her Şey Dahil",
                            PriceMultiplier = 1.5m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.ReservationExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtraServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExtraServiceId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("HasAirConditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBalcony")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHairDryer")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMinibar")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTV")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("money");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(511),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 76.71m,
                            RoomNumber = "144",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(523),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 69.15m,
                            RoomNumber = "132",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(528),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 106.85m,
                            RoomNumber = "103",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(532),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 139.36m,
                            RoomNumber = "171",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(535),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 104.91m,
                            RoomNumber = "178",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(539),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 109.72m,
                            RoomNumber = "162",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(543),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 77.89m,
                            RoomNumber = "145",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(546),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 106.06m,
                            RoomNumber = "155",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(549),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 77.57m,
                            RoomNumber = "103",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(553),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 129.11m,
                            RoomNumber = "196",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(558),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 174.08m,
                            RoomNumber = "236",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(561),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 128.91m,
                            RoomNumber = "257",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(600),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 189.27m,
                            RoomNumber = "214",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(604),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 128.28m,
                            RoomNumber = "281",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(608),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 185.43m,
                            RoomNumber = "222",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(610),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 199.12m,
                            RoomNumber = "218",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(613),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 123.50m,
                            RoomNumber = "211",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(617),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 115.16m,
                            RoomNumber = "210",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(620),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 189.44m,
                            RoomNumber = "247",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(622),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 162.30m,
                            RoomNumber = "259",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(628),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 178.81m,
                            RoomNumber = "309",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(632),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 153.10m,
                            RoomNumber = "338",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(635),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 183.89m,
                            RoomNumber = "324",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(638),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 204.69m,
                            RoomNumber = "381",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(641),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 214.54m,
                            RoomNumber = "345",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(644),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 251.37m,
                            RoomNumber = "323",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(646),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 256.15m,
                            RoomNumber = "314",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(650),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 188.16m,
                            RoomNumber = "365",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(653),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 151.38m,
                            RoomNumber = "393",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(655),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 263.47m,
                            RoomNumber = "331",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(660),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 292.16m,
                            RoomNumber = "483",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(663),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 264.04m,
                            RoomNumber = "465",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(666),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 435.69m,
                            RoomNumber = "434",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(670),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 230.64m,
                            RoomNumber = "421",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(673),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 485.34m,
                            RoomNumber = "466",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(676),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 429.55m,
                            RoomNumber = "431",
                            RoomStatus = 3,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(678),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 436.96m,
                            RoomNumber = "494",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(681),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 360.66m,
                            RoomNumber = "426",
                            RoomStatus = 3,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(684),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 206.53m,
                            RoomNumber = "484",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(686),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 354.51m,
                            RoomNumber = "468",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 189, DateTimeKind.Local).AddTicks(688),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "500",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 187, DateTimeKind.Local).AddTicks(3354),
                            Description = "1 adet tek kişilik yatak. Balkon ve minibar bulunmaz. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Tek Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 187, DateTimeKind.Local).AddTicks(3363),
                            Description = "1 adet büyük (duble) yatak. Minibar bulunur. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Çift Kişilik (Duble)",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 187, DateTimeKind.Local).AddTicks(3366),
                            Description = "3 adet tek kişilik yatak. Balkon ve minibar bulunmaz. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Üç Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 187, DateTimeKind.Local).AddTicks(3368),
                            Description = "1 adet büyük (duble) yatak + 2 adet tek kişilik yatak. Balkon ve minibar bulunur. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Dört Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 21, 6, 35, 44, 187, DateTimeKind.Local).AddTicks(3369),
                            Description = "Geniş ve lüks oda. Özel oturma alanı, büyük yatak, balkon, minibar, özel banyo ve lüks hizmetler. Klima, TV, saç kurutma makinesi, WiFi ve özel hizmetler mevcuttur.",
                            Name = "Kral Dairesi",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithOne("AppUserProfile")
                        .HasForeignKey("Project.Entities.Models.AppUserProfile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("Project.Entities.Models.Payment", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "Reservations")
                        .WithMany("Reservations")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("ManagedReservations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Package", "Package")
                        .WithMany("Reservations")
                        .HasForeignKey("PackageId");

                    b.HasOne("Project.Entities.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Package");

                    b.Navigation("Reservations");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.Entities.Models.ReservationExtraService", b =>
                {
                    b.HasOne("Project.Entities.Models.ExtraService", "ExtraService")
                        .WithMany("ReservationExtraServices")
                        .HasForeignKey("ExtraServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithMany("ReservationExtraServices")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.HasOne("Project.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Navigation("AppUserProfile")
                        .IsRequired();

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Navigation("ManagedReservations");
                });

            modelBuilder.Entity("Project.Entities.Models.ExtraService", b =>
                {
                    b.Navigation("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
