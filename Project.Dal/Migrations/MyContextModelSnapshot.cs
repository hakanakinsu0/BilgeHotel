// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Dal.ContextClasses;

#nullable disable

namespace Project.Dal.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "d067d351-b30d-4b32-84ff-b21cac004a5d",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "c8845b60-abe0-4501-83df-01b6e2c3c38b",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "8c002990-0f8b-4174-bfe2-bde3fc9166d8",
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 668, DateTimeKind.Local).AddTicks(7681),
                            Email = "bilgehotel@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BILGEHOTEL@EMAIL.COM",
                            NormalizedUserName = "BILGEHOTEL",
                            PasswordHash = "AQAAAAIAAYagAAAAEOCWlduuLPgdHc95HdiP23hVPGCd5IeHwEUcKJx9QVhD49Leamz/nAGrBZ9zlvfLHA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8d6ac6cf-6343-432e-b962-8a2c99fa3ec8",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "bilgehotel"
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique()
                        .HasFilter("[AppUserId] IS NOT NULL");

                    b.ToTable("AppUserProfiles");
                });

            modelBuilder.Entity("Project.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Project.Entities.Models.CustomerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerDetails");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(1645),
                            FirstName = "Cebe",
                            LastName = "Baykam",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(1938),
                            FirstName = "Bağatur",
                            LastName = "Dizdar ",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2028),
                            FirstName = "Arı",
                            LastName = "Türkdoğan",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2109),
                            FirstName = "Atunçu",
                            LastName = "Balaban",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2187),
                            FirstName = "Baykara",
                            LastName = "Sandalcı",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2239),
                            FirstName = "İrinç",
                            LastName = "Elçiboğa",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2315),
                            FirstName = "Çağrıtegin",
                            LastName = "Adıvar",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2393),
                            FirstName = "Abluç",
                            LastName = "Sezek",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2458),
                            FirstName = "Bumın",
                            LastName = "Kulaksızoğlu",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2506),
                            FirstName = "Avşar",
                            LastName = "Özkök ",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2584),
                            FirstName = "Borlukçu",
                            LastName = "Ilıcalı",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2670),
                            FirstName = "Bağan",
                            LastName = "Kılıççı",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2747),
                            FirstName = "Bilge",
                            LastName = "Erkekli",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2804),
                            FirstName = "Akçakoca",
                            LastName = "Toraman",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2880),
                            FirstName = "Apatarkan",
                            LastName = "Demirel",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2949),
                            FirstName = "Çolpan",
                            LastName = "Ağaoğlu",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3021),
                            FirstName = "Adsız",
                            LastName = "Erçetin",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3069),
                            FirstName = "Baykoca",
                            LastName = "Kunter",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3140),
                            FirstName = "Alpay",
                            LastName = "Karaböcek",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3207),
                            FirstName = "Bekeçtegin",
                            LastName = "Mertoğlu",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3281),
                            FirstName = "Buluğ",
                            LastName = "Elmastaşoğlu",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3334),
                            FirstName = "Cılasun",
                            LastName = "Bolatlı",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3413),
                            FirstName = "Bükebuyraç",
                            LastName = "Yıldırım ",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3490),
                            FirstName = "Barmaklı",
                            LastName = "Çetin",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3534),
                            FirstName = "Bıtrı",
                            LastName = "Beşerler",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3610),
                            FirstName = "Dizik",
                            LastName = "Kılıççı",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3681),
                            FirstName = "Aldoğan",
                            LastName = "Özkara",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3752),
                            FirstName = "Basu",
                            LastName = "Günday",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3796),
                            FirstName = "Bayındır",
                            LastName = "Tanrıkulu",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3867),
                            FirstName = "Abılay",
                            LastName = "Ertürk",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3929),
                            FirstName = "Armağan",
                            LastName = "Türkdoğan",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4004),
                            FirstName = "Çemgen",
                            LastName = "Akal",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4049),
                            FirstName = "Bongul",
                            LastName = "Tazegül",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4130),
                            FirstName = "Bümen",
                            LastName = "Balcı",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4199),
                            FirstName = "Aysılığ",
                            LastName = "Barbarosoğlu",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4274),
                            FirstName = "Bektür",
                            LastName = "Özdenak",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4322),
                            FirstName = "Bayraç",
                            LastName = "Öztonga",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4390),
                            FirstName = "Kayaçık",
                            LastName = "Dağdaş",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4460),
                            FirstName = "Buşulgan",
                            LastName = "Doğan ",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4529),
                            FirstName = "Edil",
                            LastName = "Akışık",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4573),
                            FirstName = "Basanyalavaç",
                            LastName = "Akbulut",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4632),
                            FirstName = "Alpurungu",
                            LastName = "Yılmazer",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4708),
                            FirstName = "Baydur",
                            LastName = "Süleymanoğlu",
                            Position = "Elektrikçi",
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4791),
                            FirstName = "Bürlük",
                            LastName = "Keseroğlu",
                            Position = "IT Sorumlusu",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.EmployeeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Sıran Söğüt Sokak 2, Hatay, Ukrayna",
                            BirthDate = new DateTime(1979, 10, 24, 3, 57, 58, 73, DateTimeKind.Local).AddTicks(9296),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(1929),
                            EmployeeId = 1,
                            HireDate = new DateTime(2023, 12, 16, 13, 30, 20, 214, DateTimeKind.Local).AddTicks(70),
                            PhoneNumber = "+90-061-626-2-081",
                            Salary = 17720.30m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Oğuzhan Sokak 486, Manisa, Papua Yeni Gine",
                            BirthDate = new DateTime(2006, 9, 23, 7, 5, 27, 197, DateTimeKind.Local).AddTicks(1165),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2021),
                            EmployeeId = 2,
                            HireDate = new DateTime(2014, 10, 8, 14, 34, 13, 510, DateTimeKind.Local).AddTicks(9984),
                            PhoneNumber = "+90-275-822-8-604",
                            Salary = 15898.61m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Afyon Kaya Sokak 1, Şanlıurfa, Mozambik",
                            BirthDate = new DateTime(1984, 2, 16, 22, 4, 0, 135, DateTimeKind.Local).AddTicks(1549),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2102),
                            EmployeeId = 3,
                            HireDate = new DateTime(2019, 7, 17, 22, 8, 2, 474, DateTimeKind.Local).AddTicks(8043),
                            PhoneNumber = "+90-853-937-60-68",
                            Salary = 17747.57m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Alparslan Türkeş Bulvarı 429, Denizli, Folkland Adaları, İngiltere",
                            BirthDate = new DateTime(1997, 9, 28, 6, 53, 13, 965, DateTimeKind.Local).AddTicks(6296),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2180),
                            EmployeeId = 4,
                            HireDate = new DateTime(2015, 4, 15, 6, 17, 19, 514, DateTimeKind.Local).AddTicks(7351),
                            PhoneNumber = "+90-188-555-7-650",
                            Salary = 15440.60m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "Fatih Sokak  33a, Bingöl, Johnston Atoll, Amerika",
                            BirthDate = new DateTime(1995, 7, 27, 8, 27, 21, 360, DateTimeKind.Local).AddTicks(3603),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2232),
                            EmployeeId = 5,
                            HireDate = new DateTime(2022, 3, 12, 21, 53, 2, 253, DateTimeKind.Local).AddTicks(5559),
                            PhoneNumber = "+90-718-712-5-660",
                            Salary = 27624.02m,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Ali Çetinkaya Caddesi 35a, Hatay, Romanya",
                            BirthDate = new DateTime(1971, 9, 15, 0, 40, 16, 28, DateTimeKind.Local).AddTicks(4856),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2310),
                            EmployeeId = 6,
                            HireDate = new DateTime(2017, 11, 11, 13, 12, 28, 984, DateTimeKind.Local).AddTicks(2820),
                            PhoneNumber = "+90-368-017-6-606",
                            Salary = 38781.63m,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "Köypınar Sokak 26, Mardin, Kuzey Maryana Adaları",
                            BirthDate = new DateTime(2002, 7, 25, 0, 59, 43, 138, DateTimeKind.Local).AddTicks(4519),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2387),
                            EmployeeId = 7,
                            HireDate = new DateTime(2019, 6, 22, 10, 25, 13, 898, DateTimeKind.Local).AddTicks(2717),
                            PhoneNumber = "+90-556-752-32-31",
                            Salary = 37818.36m,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "Harman Altı Sokak 84a, Niğde, Montserrat",
                            BirthDate = new DateTime(1995, 3, 27, 7, 26, 40, 625, DateTimeKind.Local).AddTicks(9942),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2452),
                            EmployeeId = 8,
                            HireDate = new DateTime(2019, 8, 31, 12, 29, 12, 907, DateTimeKind.Local).AddTicks(3417),
                            PhoneNumber = "+90-141-932-33-90",
                            Salary = 48615.42m,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = "Yunus Emre Sokak 26c, Manisa, Malezya",
                            BirthDate = new DateTime(2006, 11, 21, 21, 49, 12, 854, DateTimeKind.Local).AddTicks(6452),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2500),
                            EmployeeId = 9,
                            HireDate = new DateTime(2014, 5, 14, 1, 27, 42, 489, DateTimeKind.Local).AddTicks(8749),
                            PhoneNumber = "+90-597-710-5-406",
                            Salary = 27096.42m,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "Dağınık Evler Sokak 65c, Adana, Tayland",
                            BirthDate = new DateTime(1989, 9, 9, 23, 19, 21, 4, DateTimeKind.Local).AddTicks(6909),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2578),
                            EmployeeId = 10,
                            HireDate = new DateTime(2022, 7, 5, 12, 44, 56, 40, DateTimeKind.Local).AddTicks(8509),
                            PhoneNumber = "+90-186-337-19-60",
                            Salary = 27260.28m,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            Address = "Sevgi Sokak 40a, Balıkesir, Birleşik Arap Emirlikleri",
                            BirthDate = new DateTime(2000, 6, 30, 9, 20, 19, 23, DateTimeKind.Local).AddTicks(4239),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2665),
                            EmployeeId = 11,
                            HireDate = new DateTime(2016, 3, 15, 4, 39, 8, 793, DateTimeKind.Local).AddTicks(7756),
                            PhoneNumber = "+90-742-340-54-81",
                            Salary = 22487.59m,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            Address = "Saygılı Sokak 84b, Çorum, Almanya",
                            BirthDate = new DateTime(1976, 3, 21, 21, 47, 11, 839, DateTimeKind.Local).AddTicks(3810),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2740),
                            EmployeeId = 12,
                            HireDate = new DateTime(2019, 3, 27, 22, 24, 14, 616, DateTimeKind.Local).AddTicks(9739),
                            PhoneNumber = "+90-701-061-5-985",
                            Salary = 21307.09m,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Address = "Kocatepe Caddesi 0, Erzincan, Rusya Federasyonu",
                            BirthDate = new DateTime(1992, 6, 23, 1, 19, 40, 651, DateTimeKind.Local).AddTicks(2890),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2793),
                            EmployeeId = 13,
                            HireDate = new DateTime(2021, 8, 14, 6, 22, 57, 685, DateTimeKind.Local).AddTicks(7534),
                            PhoneNumber = "+90-657-504-63-62",
                            Salary = 42108.75m,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Address = "Barış Sokak 55a, Antalya, Avusturya",
                            BirthDate = new DateTime(1991, 4, 5, 0, 23, 14, 932, DateTimeKind.Local).AddTicks(5300),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2871),
                            EmployeeId = 14,
                            HireDate = new DateTime(2020, 2, 17, 10, 17, 57, 398, DateTimeKind.Local).AddTicks(5552),
                            PhoneNumber = "+90-673-837-4-173",
                            Salary = 19038.39m,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            Address = "Harman Altı Sokak 6, Afyon, Tuvalu",
                            BirthDate = new DateTime(1968, 12, 2, 0, 1, 35, 584, DateTimeKind.Local).AddTicks(6988),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(2944),
                            EmployeeId = 15,
                            HireDate = new DateTime(2024, 2, 4, 10, 46, 40, 362, DateTimeKind.Local).AddTicks(2027),
                            PhoneNumber = "+90-321-470-11-19",
                            Salary = 30902.21m,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            Address = "Okul Sokak 63a, Kırklareli, Moğolistan",
                            BirthDate = new DateTime(1987, 12, 12, 11, 43, 45, 784, DateTimeKind.Local).AddTicks(9797),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3016),
                            EmployeeId = 16,
                            HireDate = new DateTime(2014, 10, 9, 18, 54, 27, 89, DateTimeKind.Local).AddTicks(2464),
                            PhoneNumber = "+90-279-554-94-14",
                            Salary = 21155.18m,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            Address = "Sıran Söğüt Sokak 71c, Uşak, Türkiye",
                            BirthDate = new DateTime(2003, 4, 7, 3, 6, 20, 859, DateTimeKind.Local).AddTicks(9971),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3063),
                            EmployeeId = 17,
                            HireDate = new DateTime(2015, 5, 26, 2, 50, 17, 142, DateTimeKind.Local).AddTicks(5278),
                            PhoneNumber = "+90-878-255-5-914",
                            Salary = 45395.87m,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            Address = "Dar Sokak 51a, Karabük, Saint Martin, Fransa",
                            BirthDate = new DateTime(1988, 2, 15, 19, 18, 41, 819, DateTimeKind.Local).AddTicks(6996),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3133),
                            EmployeeId = 18,
                            HireDate = new DateTime(2016, 3, 28, 19, 15, 15, 825, DateTimeKind.Local).AddTicks(1300),
                            PhoneNumber = "+90-057-212-12-37",
                            Salary = 31018.99m,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            Address = "Okul Sokak 129, Kırşehir, Güney Kore",
                            BirthDate = new DateTime(1974, 11, 10, 20, 33, 0, 581, DateTimeKind.Local).AddTicks(5667),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3201),
                            EmployeeId = 19,
                            HireDate = new DateTime(2021, 11, 20, 16, 38, 2, 49, DateTimeKind.Local).AddTicks(4867),
                            PhoneNumber = "+90-602-711-68-19",
                            Salary = 39610.85m,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            Address = "Mevlana Sokak 6, Erzincan, Macaristan",
                            BirthDate = new DateTime(1997, 9, 25, 5, 26, 50, 774, DateTimeKind.Local).AddTicks(9655),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3276),
                            EmployeeId = 20,
                            HireDate = new DateTime(2015, 5, 25, 3, 55, 49, 917, DateTimeKind.Local).AddTicks(9805),
                            PhoneNumber = "+90-276-750-6-872",
                            Salary = 48462.34m,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            Address = "Menekşe Sokak 274, Osmaniye, Bahreyn",
                            BirthDate = new DateTime(2000, 5, 18, 10, 31, 28, 742, DateTimeKind.Local).AddTicks(4121),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3324),
                            EmployeeId = 21,
                            HireDate = new DateTime(2016, 11, 25, 3, 8, 50, 953, DateTimeKind.Local).AddTicks(7739),
                            PhoneNumber = "+90-133-284-9-366",
                            Salary = 31204.99m,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            Address = "Dağınık Evler Sokak 57, Ardahan, Şili",
                            BirthDate = new DateTime(2001, 10, 26, 0, 49, 44, 340, DateTimeKind.Local).AddTicks(2079),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3407),
                            EmployeeId = 22,
                            HireDate = new DateTime(2023, 1, 1, 1, 40, 51, 955, DateTimeKind.Local).AddTicks(7602),
                            PhoneNumber = "+90-501-381-70-24",
                            Salary = 44155.92m,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            Address = "Sıran Söğüt Sokak 778, Zonguldak, İsviçre",
                            BirthDate = new DateTime(1967, 11, 18, 4, 54, 33, 214, DateTimeKind.Local).AddTicks(923),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3485),
                            EmployeeId = 23,
                            HireDate = new DateTime(2015, 2, 16, 11, 29, 28, 744, DateTimeKind.Local).AddTicks(6722),
                            PhoneNumber = "+90-808-265-83-85",
                            Salary = 25020.43m,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            Address = "Ali Çetinkaya Caddesi 14, Sivas, Ukrayna",
                            BirthDate = new DateTime(1999, 11, 3, 19, 13, 17, 451, DateTimeKind.Local).AddTicks(9190),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3530),
                            EmployeeId = 24,
                            HireDate = new DateTime(2019, 3, 17, 3, 22, 34, 489, DateTimeKind.Local).AddTicks(6848),
                            PhoneNumber = "+90-387-848-6-073",
                            Salary = 31618.83m,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            Address = "Kekeçoğlu Sokak 51, Kırşehir, Bhutan",
                            BirthDate = new DateTime(1975, 3, 28, 12, 1, 43, 356, DateTimeKind.Local).AddTicks(9950),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3606),
                            EmployeeId = 25,
                            HireDate = new DateTime(2023, 12, 21, 11, 27, 15, 276, DateTimeKind.Local).AddTicks(5637),
                            PhoneNumber = "+90-344-570-5-017",
                            Salary = 17262.03m,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            Address = "Yunus Emre Sokak 92, Afyon, Polonya",
                            BirthDate = new DateTime(2004, 11, 26, 19, 53, 18, 223, DateTimeKind.Local).AddTicks(9012),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3676),
                            EmployeeId = 26,
                            HireDate = new DateTime(2022, 1, 12, 5, 9, 35, 914, DateTimeKind.Local).AddTicks(2775),
                            PhoneNumber = "+90-641-047-73-01",
                            Salary = 17066.52m,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            Address = "Okul Sokak 35b, Antalya, Makedonya",
                            BirthDate = new DateTime(1981, 1, 19, 22, 38, 19, 782, DateTimeKind.Local).AddTicks(7873),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3748),
                            EmployeeId = 27,
                            HireDate = new DateTime(2014, 10, 21, 14, 8, 49, 862, DateTimeKind.Local).AddTicks(9383),
                            PhoneNumber = "+90-584-031-57-64",
                            Salary = 39594.22m,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            Address = "Bahçe Sokak 79, Karabük, Papua Yeni Gine",
                            BirthDate = new DateTime(1986, 6, 13, 11, 35, 18, 677, DateTimeKind.Local).AddTicks(1547),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3791),
                            EmployeeId = 28,
                            HireDate = new DateTime(2018, 4, 12, 22, 49, 16, 212, DateTimeKind.Local).AddTicks(7666),
                            PhoneNumber = "+90-375-144-6-865",
                            Salary = 19761.26m,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            Address = "Lütfi Karadirek Caddesi 22c, Giresun, Burkina Faso",
                            BirthDate = new DateTime(1999, 10, 10, 17, 20, 46, 669, DateTimeKind.Local).AddTicks(8520),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3862),
                            EmployeeId = 29,
                            HireDate = new DateTime(2020, 3, 14, 7, 56, 12, 904, DateTimeKind.Local).AddTicks(5192),
                            PhoneNumber = "+90-769-923-41-39",
                            Salary = 34872.92m,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            Address = "Barış Sokak 0, İstanbul, Güney Kıbrıs Rum Yönetimi",
                            BirthDate = new DateTime(1986, 7, 23, 19, 23, 54, 206, DateTimeKind.Local).AddTicks(3228),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3924),
                            EmployeeId = 30,
                            HireDate = new DateTime(2022, 10, 14, 8, 30, 33, 969, DateTimeKind.Local).AddTicks(4368),
                            PhoneNumber = "+90-524-917-7-903",
                            Salary = 33318.39m,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            Address = "Gül Sokak 83c, Rize, Japonya",
                            BirthDate = new DateTime(1996, 6, 29, 14, 53, 9, 561, DateTimeKind.Local).AddTicks(2292),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(3998),
                            EmployeeId = 31,
                            HireDate = new DateTime(2022, 9, 8, 3, 22, 39, 325, DateTimeKind.Local).AddTicks(8589),
                            PhoneNumber = "+90-695-572-92-73",
                            Salary = 23410.81m,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            Address = "Atatürk Bulvarı 7, Muş, Bangladeş",
                            BirthDate = new DateTime(1975, 2, 5, 16, 36, 6, 777, DateTimeKind.Local).AddTicks(855),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4045),
                            EmployeeId = 32,
                            HireDate = new DateTime(2014, 6, 1, 8, 25, 13, 544, DateTimeKind.Local).AddTicks(9325),
                            PhoneNumber = "+90-595-959-44-30",
                            Salary = 30067.33m,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            Address = "Köypınar Sokak 442, Diyarbakır, Mauritius",
                            BirthDate = new DateTime(1993, 1, 17, 12, 58, 59, 405, DateTimeKind.Local).AddTicks(4335),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4124),
                            EmployeeId = 33,
                            HireDate = new DateTime(2021, 10, 22, 20, 48, 49, 42, DateTimeKind.Local).AddTicks(5869),
                            PhoneNumber = "+90-098-603-57-41",
                            Salary = 33008.21m,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            Address = "Bandak Sokak 62, Kars, İsveç",
                            BirthDate = new DateTime(1992, 2, 5, 6, 57, 19, 281, DateTimeKind.Local).AddTicks(4622),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4193),
                            EmployeeId = 34,
                            HireDate = new DateTime(2023, 11, 27, 15, 3, 22, 97, DateTimeKind.Local).AddTicks(4960),
                            PhoneNumber = "+90-638-192-67-93",
                            Salary = 18110.96m,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            Address = "Menekşe Sokak 16c, Nevşehir, San Marino",
                            BirthDate = new DateTime(2003, 8, 9, 10, 40, 40, 529, DateTimeKind.Local).AddTicks(6433),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4269),
                            EmployeeId = 35,
                            HireDate = new DateTime(2020, 10, 27, 19, 31, 1, 838, DateTimeKind.Local).AddTicks(7132),
                            PhoneNumber = "+90-143-057-6-255",
                            Salary = 37604.40m,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            Address = "Lütfi Karadirek Caddesi 48c, Çorum, Makedonya",
                            BirthDate = new DateTime(1997, 11, 21, 17, 53, 36, 823, DateTimeKind.Local).AddTicks(1907),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4313),
                            EmployeeId = 36,
                            HireDate = new DateTime(2018, 7, 3, 1, 24, 22, 478, DateTimeKind.Local).AddTicks(6979),
                            PhoneNumber = "+90-389-588-1-961",
                            Salary = 43716.71m,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            Address = "Kocatepe Caddesi 2, Batman, Kamerun",
                            BirthDate = new DateTime(1969, 6, 6, 14, 38, 27, 213, DateTimeKind.Local).AddTicks(4996),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4386),
                            EmployeeId = 37,
                            HireDate = new DateTime(2014, 12, 7, 3, 0, 5, 932, DateTimeKind.Local).AddTicks(8699),
                            PhoneNumber = "+90-807-957-14-44",
                            Salary = 28634.12m,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            Address = "Yunus Emre Sokak 144, Muş, Lübnan",
                            BirthDate = new DateTime(1999, 9, 8, 21, 55, 56, 974, DateTimeKind.Local).AddTicks(514),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4456),
                            EmployeeId = 38,
                            HireDate = new DateTime(2014, 3, 7, 4, 43, 25, 761, DateTimeKind.Local).AddTicks(6180),
                            PhoneNumber = "+90-787-463-28-28",
                            Salary = 35242.11m,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            Address = "Lütfi Karadirek Caddesi 40b, Uşak, Tacikistan",
                            BirthDate = new DateTime(1973, 12, 13, 19, 16, 55, 890, DateTimeKind.Local).AddTicks(2757),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4524),
                            EmployeeId = 39,
                            HireDate = new DateTime(2016, 2, 23, 14, 6, 45, 315, DateTimeKind.Local).AddTicks(8768),
                            PhoneNumber = "+90-658-286-4-594",
                            Salary = 49109.72m,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            Address = "Kekeçoğlu Sokak 70c, Denizli, Danimarka",
                            BirthDate = new DateTime(1981, 1, 30, 15, 5, 8, 164, DateTimeKind.Local).AddTicks(3468),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4569),
                            EmployeeId = 40,
                            HireDate = new DateTime(2021, 8, 8, 15, 55, 23, 96, DateTimeKind.Local).AddTicks(2596),
                            PhoneNumber = "+90-935-038-06-01",
                            Salary = 23616.41m,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            Address = "Köypınar Sokak 74, Diyarbakır, Benin",
                            BirthDate = new DateTime(1990, 9, 19, 19, 37, 26, 567, DateTimeKind.Local).AddTicks(4705),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4628),
                            EmployeeId = 41,
                            HireDate = new DateTime(2016, 1, 16, 15, 19, 38, 690, DateTimeKind.Local).AddTicks(8289),
                            PhoneNumber = "+90-499-358-2-360",
                            Salary = 19155.86m,
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            Address = "Nalbant Sokak 84, İzmir, Türkmenistan",
                            BirthDate = new DateTime(1976, 1, 4, 17, 48, 47, 216, DateTimeKind.Local).AddTicks(3054),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4702),
                            EmployeeId = 42,
                            HireDate = new DateTime(2014, 9, 30, 4, 2, 20, 265, DateTimeKind.Local).AddTicks(9414),
                            PhoneNumber = "+90-145-144-3-000",
                            Salary = 15436.48m,
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            Address = "Kocatepe Caddesi 8, Kocaeli, Malta",
                            BirthDate = new DateTime(1991, 6, 14, 8, 53, 37, 223, DateTimeKind.Local).AddTicks(3033),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4786),
                            EmployeeId = 43,
                            HireDate = new DateTime(2019, 9, 17, 11, 25, 44, 894, DateTimeKind.Local).AddTicks(8487),
                            PhoneNumber = "+90-659-550-7-103",
                            Salary = 30230.25m,
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            Address = "Menekşe Sokak 58, Bursa, San Marino",
                            BirthDate = new DateTime(1991, 9, 16, 8, 43, 42, 416, DateTimeKind.Local).AddTicks(4365),
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 630, DateTimeKind.Local).AddTicks(4830),
                            EmployeeId = 44,
                            HireDate = new DateTime(2019, 10, 12, 16, 7, 7, 825, DateTimeKind.Local).AddTicks(3817),
                            PhoneNumber = "+90-556-320-74-74",
                            Salary = 36084.83m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.EmployeeShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.HasIndex("EmployeeId", "ShiftId")
                        .IsUnique();

                    b.ToTable("EmployeeShifts");
                });

            modelBuilder.Entity("Project.Entities.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("money");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(436),
                            Floor = 1,
                            PricePerNight = 160.85m,
                            RoomNumber = "199",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(450),
                            Floor = 1,
                            PricePerNight = 111.77m,
                            RoomNumber = "191",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(455),
                            Floor = 1,
                            PricePerNight = 142.69m,
                            RoomNumber = "109",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(458),
                            Floor = 1,
                            PricePerNight = 173.86m,
                            RoomNumber = "135",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(462),
                            Floor = 1,
                            PricePerNight = 180.85m,
                            RoomNumber = "129",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(466),
                            Floor = 1,
                            PricePerNight = 195.15m,
                            RoomNumber = "144",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(469),
                            Floor = 1,
                            PricePerNight = 147.11m,
                            RoomNumber = "173",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(471),
                            Floor = 1,
                            PricePerNight = 158.23m,
                            RoomNumber = "174",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(474),
                            Floor = 1,
                            PricePerNight = 119.43m,
                            RoomNumber = "126",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 629, DateTimeKind.Local).AddTicks(503),
                            Floor = 1,
                            PricePerNight = 113.51m,
                            RoomNumber = "154",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 228.96m,
                            RoomNumber = "232",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 246.63m,
                            RoomNumber = "268",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 121.73m,
                            RoomNumber = "203",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 127.03m,
                            RoomNumber = "273",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 224.84m,
                            RoomNumber = "229",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 195.67m,
                            RoomNumber = "279",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 199.67m,
                            RoomNumber = "290",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 133.67m,
                            RoomNumber = "209",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 134.40m,
                            RoomNumber = "213",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 122.79m,
                            RoomNumber = "286",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 292.67m,
                            RoomNumber = "331",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 216.66m,
                            RoomNumber = "342",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 167.59m,
                            RoomNumber = "324",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 167.98m,
                            RoomNumber = "357",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 249.66m,
                            RoomNumber = "372",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 263.07m,
                            RoomNumber = "389",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 151.18m,
                            RoomNumber = "366",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 178.88m,
                            RoomNumber = "363",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 166.51m,
                            RoomNumber = "345",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 205.30m,
                            RoomNumber = "344",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 288.39m,
                            RoomNumber = "432",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 497.44m,
                            RoomNumber = "405",
                            RoomStatus = 3,
                            RoomTypeId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 433.16m,
                            RoomNumber = "455",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 312.12m,
                            RoomNumber = "481",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 273.16m,
                            RoomNumber = "426",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 264.36m,
                            RoomNumber = "431",
                            RoomStatus = 3,
                            RoomTypeId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 337.29m,
                            RoomNumber = "471",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 494.10m,
                            RoomNumber = "477",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 454.74m,
                            RoomNumber = "435",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 315.99m,
                            RoomNumber = "432",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 1000m,
                            RoomNumber = "500",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.RoomFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("RoomId", "FeatureId")
                        .IsUnique();

                    b.ToTable("RoomFeatures");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 627, DateTimeKind.Local).AddTicks(4616),
                            Description = "1 tek kişilik yatak",
                            Name = "Tek Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 627, DateTimeKind.Local).AddTicks(4627),
                            Description = "1 büyük yatak",
                            Name = "Çift Kişilik (Duble)",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 627, DateTimeKind.Local).AddTicks(4628),
                            Description = "3 tek kişilik yatak",
                            Name = "Üç Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 627, DateTimeKind.Local).AddTicks(4629),
                            Description = "1 büyük + 2 tek kişilik yatak",
                            Name = "Dört Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 19, 23, 14, 36, 627, DateTimeKind.Local).AddTicks(4630),
                            Description = "Lüks konaklama, özel hizmetler",
                            Name = "Kral Dairesi",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithOne("AppUserProfile")
                        .HasForeignKey("Project.Entities.Models.AppUserProfile", "AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.Customer", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithMany("Customers")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.CustomerDetail", b =>
                {
                    b.HasOne("Project.Entities.Models.Customer", "Customer")
                        .WithOne("CustomerDetail")
                        .HasForeignKey("Project.Entities.Models.CustomerDetail", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Project.Entities.Models.EmployeeDetail", b =>
                {
                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithOne("EmployeeDetail")
                        .HasForeignKey("Project.Entities.Models.EmployeeDetail", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Project.Entities.Models.EmployeeShift", b =>
                {
                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Shift", "Shift")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("Project.Entities.Models.Payment", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.HasOne("Project.Entities.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("ManagedReservations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Package", "Package")
                        .WithMany("Reservations")
                        .HasForeignKey("PackageId");

                    b.HasOne("Project.Entities.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("Package");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.HasOne("Project.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomFeature", b =>
                {
                    b.HasOne("Project.Entities.Models.Feature", "Feature")
                        .WithMany("RoomFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Room", "Room")
                        .WithMany("RoomFeatures")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Navigation("AppUserProfile")
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Project.Entities.Models.Customer", b =>
                {
                    b.Navigation("CustomerDetail")
                        .IsRequired();

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Navigation("EmployeeDetail")
                        .IsRequired();

                    b.Navigation("EmployeeShifts");

                    b.Navigation("ManagedReservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Feature", b =>
                {
                    b.Navigation("RoomFeatures");
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("RoomFeatures");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Project.Entities.Models.Shift", b =>
                {
                    b.Navigation("EmployeeShifts");
                });
#pragma warning restore 612, 618
        }
    }
}
