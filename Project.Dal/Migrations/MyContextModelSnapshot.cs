// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Dal.ContextClasses;

#nullable disable

namespace Project.Dal.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "ca02fc25-2c51-4605-a0c6-9a2dbb0b7894",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "21398d80-e1c0-4589-8010-c1a1674cac9a",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "52e50b97-169e-421e-8442-c8fcfa59b852",
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 202, DateTimeKind.Local).AddTicks(9949),
                            Email = "bilgehotel@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BILGEHOTEL@EMAIL.COM",
                            NormalizedUserName = "BILGEHOTEL",
                            PasswordHash = "AQAAAAIAAYagAAAAEBYO5aGkX2P3211q6nzuNAQlxMxAcfvmNd/hq+du/3ceOHUR2IwLWmKJfBUopj5XHw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b95ef230-c9dd-4de3-a032-b68c66677764",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "bilgehotel"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "2fa1372d-11aa-4b21-a9d8-776325b74ae7",
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4468),
                            Email = "testmember@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TESTMEMBER@EMAIL.COM",
                            NormalizedUserName = "TESTMEMBER",
                            PasswordHash = "AQAAAAIAAYagAAAAEGhPrCvmfNl8lZQo8KfaFwBL3U9bseVwUhTsioL4n5qDBLQxZa+YuQtMOL4EVjJdog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "35698620-3ad6-41e5-97f2-1b3c4f54c833",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "testmember"
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("AppUserProfiles");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("Shift")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Bahçe Sokak 0, Bilecik, Gambiya",
                            BirthDate = new DateTime(1972, 12, 26, 21, 22, 47, 519, DateTimeKind.Local).AddTicks(2467),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2080),
                            FirstName = "Katunkız",
                            HireDate = new DateTime(2019, 7, 2, 8, 5, 48, 381, DateTimeKind.Local).AddTicks(8401),
                            LastName = "Pekkan",
                            PhoneNumber = "+90-706-965-8-201",
                            Salary = 123.23m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Tevfik Fikret Caddesi 225, Mardin, Grönland",
                            BirthDate = new DateTime(1986, 4, 29, 13, 12, 4, 466, DateTimeKind.Local).AddTicks(4776),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2186),
                            FirstName = "Badabul",
                            HireDate = new DateTime(2015, 7, 13, 8, 7, 6, 27, DateTimeKind.Local).AddTicks(1626),
                            LastName = "Tokatlıoğlu",
                            PhoneNumber = "+90-259-255-18-12",
                            Salary = 152.61m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Namık Kemal Caddesi 7, Hakkari, İtalya",
                            BirthDate = new DateTime(1985, 1, 8, 2, 19, 19, 725, DateTimeKind.Local).AddTicks(3002),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2246),
                            FirstName = "Begine",
                            HireDate = new DateTime(2017, 1, 24, 9, 56, 58, 272, DateTimeKind.Local).AddTicks(8922),
                            LastName = "Dağdaş",
                            PhoneNumber = "+90-161-885-6-376",
                            Salary = 120.57m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Güven Yaka Sokak 14a, Çankırı, Gürcistan H",
                            BirthDate = new DateTime(2004, 3, 9, 1, 38, 3, 728, DateTimeKind.Local).AddTicks(3984),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2333),
                            FirstName = "Buyan",
                            HireDate = new DateTime(2015, 12, 15, 8, 31, 52, 539, DateTimeKind.Local).AddTicks(1044),
                            LastName = "Abadan",
                            PhoneNumber = "+90-301-851-4-372",
                            Salary = 148.87m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "Ülkü Sokak 25a, Karaman, Kuzey Kore",
                            BirthDate = new DateTime(1990, 4, 4, 11, 56, 5, 762, DateTimeKind.Local).AddTicks(8671),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2414),
                            FirstName = "Adlıbeğ",
                            HireDate = new DateTime(2018, 4, 11, 9, 59, 24, 624, DateTimeKind.Local).AddTicks(4021),
                            LastName = "Pekkan",
                            PhoneNumber = "+90-864-424-11-73",
                            Salary = 127.43m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Fatih Sokak  96, İçel (Mersin), Hollanda Antilleri",
                            BirthDate = new DateTime(1997, 11, 25, 20, 8, 26, 187, DateTimeKind.Local).AddTicks(723),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2499),
                            FirstName = "Altuga",
                            HireDate = new DateTime(2014, 8, 21, 6, 14, 0, 332, DateTimeKind.Local).AddTicks(9501),
                            LastName = "Demirbaş",
                            PhoneNumber = "+90-364-429-6-928",
                            Salary = 157.86m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "İsmet Paşa Caddesi 04b, Bolu, Namibia",
                            BirthDate = new DateTime(1999, 9, 9, 14, 59, 51, 113, DateTimeKind.Local).AddTicks(103),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2560),
                            FirstName = "Barkdoğdu",
                            HireDate = new DateTime(2020, 9, 29, 13, 45, 45, 237, DateTimeKind.Local).AddTicks(1376),
                            LastName = "Ağaoğlu",
                            PhoneNumber = "+90-000-697-13-09",
                            Salary = 135.28m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "Fatih Sokak  73, Çankırı, İran",
                            BirthDate = new DateTime(1992, 12, 31, 10, 50, 39, 965, DateTimeKind.Local).AddTicks(4471),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2648),
                            FirstName = "Atakağan",
                            HireDate = new DateTime(2017, 5, 12, 8, 6, 0, 75, DateTimeKind.Local).AddTicks(9492),
                            LastName = "Nebioğlu",
                            PhoneNumber = "+90-945-337-61-66",
                            Salary = 112.54m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = "Sarıkaya Caddesi 0, Bingöl, Azerbaycan",
                            BirthDate = new DateTime(1976, 4, 4, 6, 21, 41, 531, DateTimeKind.Local).AddTicks(6791),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2722),
                            FirstName = "Böge",
                            HireDate = new DateTime(2017, 3, 21, 8, 3, 5, 793, DateTimeKind.Local).AddTicks(4596),
                            LastName = "Menemencioğlu",
                            PhoneNumber = "+90-006-059-3-143",
                            Salary = 114.14m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "Harman Altı Sokak 76, Rize, Somali",
                            BirthDate = new DateTime(1978, 10, 15, 13, 7, 6, 848, DateTimeKind.Local).AddTicks(968),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2778),
                            FirstName = "Kırçiçek",
                            HireDate = new DateTime(2016, 3, 8, 22, 41, 52, 709, DateTimeKind.Local).AddTicks(8350),
                            LastName = "Baturalp",
                            PhoneNumber = "+90-259-177-30-60",
                            Salary = 117.58m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            Address = "Dağınık Evler Sokak 51b, Karabük, Özbekistan",
                            BirthDate = new DateTime(1967, 7, 8, 20, 3, 38, 355, DateTimeKind.Local).AddTicks(2004),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2863),
                            FirstName = "Gülegen",
                            HireDate = new DateTime(2020, 3, 1, 12, 33, 18, 458, DateTimeKind.Local).AddTicks(7187),
                            LastName = "Erkekli",
                            PhoneNumber = "+90-699-760-1-031",
                            Salary = 128.12m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            Address = "Okul Sokak 69, Erzurum, Tayvan",
                            BirthDate = new DateTime(1973, 1, 7, 3, 57, 48, 605, DateTimeKind.Local).AddTicks(6086),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(2965),
                            FirstName = "Bayraç",
                            HireDate = new DateTime(2021, 4, 21, 19, 29, 19, 782, DateTimeKind.Local).AddTicks(8006),
                            LastName = "Orbay",
                            PhoneNumber = "+90-352-069-7-165",
                            Salary = 138.66m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Address = "Kekeçoğlu Sokak 54a, Edirne, İspanya",
                            BirthDate = new DateTime(1987, 1, 30, 20, 1, 0, 720, DateTimeKind.Local).AddTicks(7556),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3045),
                            FirstName = "Arbay",
                            HireDate = new DateTime(2015, 3, 15, 20, 18, 58, 467, DateTimeKind.Local).AddTicks(1405),
                            LastName = "Nalbantoğlu",
                            PhoneNumber = "+90-454-391-4-163",
                            Salary = 132.51m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Address = "Sarıkaya Caddesi 36a, Bilecik, Ekvator",
                            BirthDate = new DateTime(2001, 9, 15, 13, 34, 43, 4, DateTimeKind.Local).AddTicks(2935),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3090),
                            FirstName = "Bergü",
                            HireDate = new DateTime(2023, 11, 5, 23, 54, 57, 629, DateTimeKind.Local).AddTicks(605),
                            LastName = "Tokatlıoğlu",
                            PhoneNumber = "+90-257-470-67-40",
                            Salary = 137.19m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            Address = "Harman Altı Sokak 730, Van, Ruanda",
                            BirthDate = new DateTime(2003, 3, 27, 9, 1, 37, 187, DateTimeKind.Local).AddTicks(1194),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3162),
                            FirstName = "Işık",
                            HireDate = new DateTime(2017, 1, 7, 22, 2, 41, 480, DateTimeKind.Local).AddTicks(9700),
                            LastName = "Gürmen",
                            PhoneNumber = "+90-074-151-0-223",
                            Salary = 110.70m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            Address = "Mevlana Sokak 100, Tekirdağ, Tonga",
                            BirthDate = new DateTime(2003, 1, 22, 11, 30, 7, 938, DateTimeKind.Local).AddTicks(8713),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3233),
                            FirstName = "Baydur",
                            HireDate = new DateTime(2014, 5, 18, 9, 23, 19, 890, DateTimeKind.Local).AddTicks(7121),
                            LastName = "Tahincioğlu",
                            PhoneNumber = "+90-589-019-58-00",
                            Salary = 129.57m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            Address = "Dağınık Evler Sokak 7, Kütahya, Monako",
                            BirthDate = new DateTime(1971, 4, 2, 2, 26, 14, 485, DateTimeKind.Local).AddTicks(6983),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3308),
                            FirstName = "Adlıbeğ",
                            HireDate = new DateTime(2022, 10, 14, 7, 3, 2, 279, DateTimeKind.Local).AddTicks(4147),
                            LastName = "Tuğluk",
                            PhoneNumber = "+90-779-366-4-999",
                            Salary = 124.27m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            Address = "Barış Sokak 923, Antalya, İsviçre",
                            BirthDate = new DateTime(2005, 8, 12, 3, 5, 38, 780, DateTimeKind.Local).AddTicks(7189),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3361),
                            FirstName = "Günay",
                            HireDate = new DateTime(2018, 6, 11, 15, 27, 38, 354, DateTimeKind.Local).AddTicks(1425),
                            LastName = "Sepetçi",
                            PhoneNumber = "+90-215-709-7-069",
                            Salary = 116.96m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            Address = "Barış Sokak 28c, Hatay, Fransız Guyanası",
                            BirthDate = new DateTime(2002, 1, 17, 22, 16, 3, 226, DateTimeKind.Local).AddTicks(2964),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3438),
                            FirstName = "Ebkızı",
                            HireDate = new DateTime(2017, 4, 22, 16, 35, 24, 155, DateTimeKind.Local).AddTicks(5735),
                            LastName = "Paksüt",
                            PhoneNumber = "+90-751-521-61-23",
                            Salary = 141.46m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            Address = "Harman Yolu Sokak  578, Çanakkale, Panama",
                            BirthDate = new DateTime(1985, 1, 10, 15, 34, 31, 453, DateTimeKind.Local).AddTicks(9137),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3506),
                            FirstName = "Gökbörü",
                            HireDate = new DateTime(2024, 1, 16, 6, 17, 50, 771, DateTimeKind.Local).AddTicks(512),
                            LastName = "Toraman",
                            PhoneNumber = "+90-900-455-6-928",
                            Salary = 149.15m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            Address = "Namık Kemal Caddesi 930, Zonguldak, Guyana",
                            BirthDate = new DateTime(1993, 1, 4, 20, 12, 39, 437, DateTimeKind.Local).AddTicks(3820),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3581),
                            FirstName = "Baltar",
                            HireDate = new DateTime(2021, 12, 27, 3, 29, 40, 91, DateTimeKind.Local).AddTicks(1454),
                            LastName = "Akışık",
                            PhoneNumber = "+90-452-072-7-511",
                            Salary = 165.08m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            Address = "Nalbant Sokak 86a, Nevşehir, El Salvador",
                            BirthDate = new DateTime(1969, 10, 25, 4, 24, 35, 205, DateTimeKind.Local).AddTicks(5710),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3629),
                            FirstName = "İldike",
                            HireDate = new DateTime(2014, 7, 27, 16, 1, 51, 102, DateTimeKind.Local).AddTicks(5779),
                            LastName = "Akyüz",
                            PhoneNumber = "+90-908-934-4-482",
                            Salary = 168.64m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            Address = "Dar Sokak 88c, Erzurum, Birmanya (Myanmar)",
                            BirthDate = new DateTime(2001, 9, 29, 16, 25, 8, 357, DateTimeKind.Local).AddTicks(4746),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3711),
                            FirstName = "Alpilig",
                            HireDate = new DateTime(2021, 9, 2, 16, 56, 45, 689, DateTimeKind.Local).AddTicks(7111),
                            LastName = "Gürmen",
                            PhoneNumber = "+90-629-118-40-95",
                            Salary = 163.65m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            Address = "Ali Çetinkaya Caddesi 84b, Şanlıurfa, Brunei",
                            BirthDate = new DateTime(1985, 4, 16, 0, 3, 7, 990, DateTimeKind.Local).AddTicks(5975),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3786),
                            FirstName = "Kımızın",
                            HireDate = new DateTime(2020, 6, 5, 14, 25, 58, 504, DateTimeKind.Local).AddTicks(746),
                            LastName = "Velioğlu",
                            PhoneNumber = "+90-089-577-0-100",
                            Salary = 167.18m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            Address = "Barış Sokak 266, Isparta, Mikronezya",
                            BirthDate = new DateTime(1977, 9, 16, 4, 31, 3, 63, DateTimeKind.Local).AddTicks(8081),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3836),
                            FirstName = "Atıgay",
                            HireDate = new DateTime(2017, 11, 22, 0, 28, 15, 330, DateTimeKind.Local).AddTicks(1092),
                            LastName = "Arıcan",
                            PhoneNumber = "+90-777-339-07-15",
                            Salary = 144.14m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            Address = "Okul Sokak 8, Diyarbakır, Gambiya",
                            BirthDate = new DateTime(2002, 11, 28, 9, 4, 25, 421, DateTimeKind.Local).AddTicks(5197),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3906),
                            FirstName = "Alpata",
                            HireDate = new DateTime(2014, 10, 14, 3, 59, 35, 355, DateTimeKind.Local).AddTicks(1677),
                            LastName = "Saygıner",
                            PhoneNumber = "+90-209-379-0-447",
                            Salary = 130.31m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            Address = "Menekşe Sokak 51, Samsun, Burkina Faso",
                            BirthDate = new DateTime(1987, 11, 19, 12, 27, 39, 72, DateTimeKind.Local).AddTicks(1474),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(3978),
                            FirstName = "Börüsengün",
                            HireDate = new DateTime(2017, 7, 23, 17, 4, 34, 499, DateTimeKind.Local).AddTicks(9919),
                            LastName = "Erez",
                            PhoneNumber = "+90-382-178-47-85",
                            Salary = 169.00m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            Address = "Atatürk Bulvarı 8, Bingöl, Kazakistan",
                            BirthDate = new DateTime(1987, 11, 21, 13, 44, 35, 390, DateTimeKind.Local).AddTicks(7152),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4048),
                            FirstName = "Bukak",
                            HireDate = new DateTime(2017, 8, 27, 18, 11, 36, 461, DateTimeKind.Local).AddTicks(6145),
                            LastName = "Abadan",
                            PhoneNumber = "+90-998-876-79-06",
                            Salary = 156.24m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            Address = "Kekeçoğlu Sokak 33c, İçel (Mersin), Kazakistan",
                            BirthDate = new DateTime(1975, 5, 24, 5, 18, 38, 203, DateTimeKind.Local).AddTicks(4862),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4097),
                            FirstName = "Alptegin",
                            HireDate = new DateTime(2019, 12, 14, 1, 5, 45, 172, DateTimeKind.Local).AddTicks(1193),
                            LastName = "Atakol",
                            PhoneNumber = "+90-726-371-9-338",
                            Salary = 142.00m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            Address = "Bahçe Sokak 49a, İçel (Mersin), Galler",
                            BirthDate = new DateTime(1971, 12, 9, 18, 34, 5, 307, DateTimeKind.Local).AddTicks(5763),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4174),
                            FirstName = "Batrak",
                            HireDate = new DateTime(2020, 4, 7, 13, 8, 16, 151, DateTimeKind.Local).AddTicks(7416),
                            LastName = "Özgörkey",
                            PhoneNumber = "+90-893-134-3-576",
                            Salary = 107.66m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            Address = "Namık Kemal Caddesi 03, Van, Porto Riko, Amerika",
                            BirthDate = new DateTime(1982, 7, 29, 16, 5, 59, 287, DateTimeKind.Local).AddTicks(267),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4243),
                            FirstName = "Alpaykağan",
                            HireDate = new DateTime(2016, 1, 19, 18, 54, 13, 476, DateTimeKind.Local).AddTicks(9235),
                            LastName = "Erbay",
                            PhoneNumber = "+90-125-635-4-909",
                            Salary = 113.78m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            Address = "Okul Sokak 28c, Kırşehir, Gine",
                            BirthDate = new DateTime(1989, 2, 4, 15, 14, 3, 233, DateTimeKind.Local).AddTicks(2820),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4321),
                            FirstName = "Artuk",
                            HireDate = new DateTime(2022, 1, 8, 17, 42, 51, 698, DateTimeKind.Local).AddTicks(6152),
                            LastName = "Abadan",
                            PhoneNumber = "+90-748-745-16-26",
                            Salary = 100.95m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            Address = "Sevgi Sokak 19b, Bolu, Bahama Adaları",
                            BirthDate = new DateTime(1969, 2, 5, 14, 28, 20, 328, DateTimeKind.Local).AddTicks(7430),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4369),
                            FirstName = "Güler",
                            HireDate = new DateTime(2015, 7, 25, 16, 51, 8, 845, DateTimeKind.Local).AddTicks(7445),
                            LastName = "Yorulmaz",
                            PhoneNumber = "+90-073-150-91-16",
                            Salary = 121.08m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            Address = "Dar Sokak 69, Kars, Tayland",
                            BirthDate = new DateTime(1969, 5, 19, 10, 23, 32, 563, DateTimeKind.Local).AddTicks(4809),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4448),
                            FirstName = "Begil",
                            HireDate = new DateTime(2021, 9, 29, 18, 28, 29, 121, DateTimeKind.Local).AddTicks(7792),
                            LastName = "Paksüt",
                            PhoneNumber = "+90-973-496-61-34",
                            Salary = 107.09m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            Address = "Sıran Söğüt Sokak 29b, Antalya, Ekvator Ginesi",
                            BirthDate = new DateTime(1994, 9, 29, 13, 44, 20, 269, DateTimeKind.Local).AddTicks(242),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4519),
                            FirstName = "Ekin",
                            HireDate = new DateTime(2014, 5, 21, 15, 47, 9, 744, DateTimeKind.Local).AddTicks(6648),
                            LastName = "Aykaç",
                            PhoneNumber = "+90-280-903-24-31",
                            Salary = 112.67m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            Address = "Ergenekon Sokak   70a, İzmir, Togo",
                            BirthDate = new DateTime(1993, 6, 17, 8, 34, 46, 549, DateTimeKind.Local).AddTicks(5065),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4596),
                            FirstName = "Çölü",
                            HireDate = new DateTime(2014, 10, 11, 10, 43, 35, 836, DateTimeKind.Local).AddTicks(9766),
                            LastName = "Kaplangı",
                            PhoneNumber = "+90-265-690-51-56",
                            Salary = 128.93m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            Address = "Atatürk Bulvarı 22b, Kastamonu, Tacikistan",
                            BirthDate = new DateTime(1984, 7, 12, 17, 37, 44, 862, DateTimeKind.Local).AddTicks(2166),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4644),
                            FirstName = "Bilgekülüçur",
                            HireDate = new DateTime(2022, 3, 2, 12, 48, 10, 176, DateTimeKind.Local).AddTicks(2395),
                            LastName = "Kasapoğlu",
                            PhoneNumber = "+90-746-548-4-196",
                            Salary = 105.81m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            Address = "Köypınar Sokak 785, Kırşehir, Belçika",
                            BirthDate = new DateTime(1977, 8, 29, 11, 8, 54, 793, DateTimeKind.Local).AddTicks(5190),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4717),
                            FirstName = "Apa",
                            HireDate = new DateTime(2019, 2, 9, 6, 19, 16, 666, DateTimeKind.Local).AddTicks(2188),
                            LastName = "Mayhoş",
                            PhoneNumber = "+90-385-234-0-780",
                            Salary = 113.58m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            Address = "Harman Yolu Sokak  347, Adana, Gabon",
                            BirthDate = new DateTime(1997, 2, 9, 16, 4, 58, 949, DateTimeKind.Local).AddTicks(8924),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4803),
                            FirstName = "Barça",
                            HireDate = new DateTime(2023, 5, 21, 8, 37, 44, 356, DateTimeKind.Local).AddTicks(4745),
                            LastName = "Ertürk",
                            PhoneNumber = "+90-373-358-6-416",
                            Salary = 111.79m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            Address = "Tevfik Fikret Caddesi 817, Konya, Vallis ve Futuna, Fransa",
                            BirthDate = new DateTime(1991, 5, 18, 0, 45, 8, 924, DateTimeKind.Local).AddTicks(3519),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4850),
                            FirstName = "Esen",
                            HireDate = new DateTime(2022, 1, 24, 10, 4, 53, 53, DateTimeKind.Local).AddTicks(582),
                            LastName = "Biçer",
                            PhoneNumber = "+90-287-627-8-931",
                            Salary = 109.01m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            Address = "Sıran Söğüt Sokak 0, Çorum, Niue, Yeni Zelanda",
                            BirthDate = new DateTime(1982, 7, 31, 23, 40, 57, 623, DateTimeKind.Local).AddTicks(5777),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(4929),
                            FirstName = "Bağaalp",
                            HireDate = new DateTime(2022, 10, 24, 16, 11, 22, 482, DateTimeKind.Local).AddTicks(3006),
                            LastName = "Küçükler",
                            PhoneNumber = "+90-173-253-0-175",
                            Salary = 109.26m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            Address = "Sarıkaya Caddesi 43, Aksaray, Slovakya",
                            BirthDate = new DateTime(1972, 9, 29, 12, 50, 25, 520, DateTimeKind.Local).AddTicks(6627),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(5002),
                            FirstName = "İlbilge",
                            HireDate = new DateTime(2016, 9, 15, 22, 27, 2, 439, DateTimeKind.Local).AddTicks(2046),
                            LastName = "Tekelioğlu",
                            PhoneNumber = "+90-058-786-1-347",
                            Salary = 119.60m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            Address = "Okul Sokak 23c, Diyarbakır, Kenya",
                            BirthDate = new DateTime(1969, 1, 9, 9, 36, 57, 26, DateTimeKind.Local).AddTicks(8354),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(5077),
                            FirstName = "Anıl",
                            HireDate = new DateTime(2020, 2, 27, 9, 37, 51, 776, DateTimeKind.Local).AddTicks(5337),
                            LastName = "Aclan",
                            PhoneNumber = "+90-011-612-11-74",
                            Salary = 155.56m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            Address = "İsmet Paşa Caddesi 69c, Denizli, Virgin Adaları, İngiltere",
                            BirthDate = new DateTime(1974, 2, 8, 10, 40, 18, 242, DateTimeKind.Local).AddTicks(474),
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 163, DateTimeKind.Local).AddTicks(5133),
                            FirstName = "Gözde",
                            HireDate = new DateTime(2022, 9, 19, 11, 28, 45, 335, DateTimeKind.Local).AddTicks(4283),
                            LastName = "Ayverdi",
                            PhoneNumber = "+90-344-958-20-52",
                            Salary = 166.29m,
                            Shift = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.ExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4858),
                            Description = "Günlük sınırsız spa kullanımı.",
                            Name = "Spa Kullanımı",
                            Price = 50m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4860),
                            Description = "24 saat oda servisi. Tüm yemek siparişleri dahildir.",
                            Name = "Oda Servisi",
                            Price = 30m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4862),
                            Description = "Minibardaki içecekler ve atıştırmalıklar dahil.",
                            Name = "Minibar Kullanımı",
                            Price = 20m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4863),
                            Description = "Gidiş-dönüş özel araç transferi.",
                            Name = "Havalimanı Transferi",
                            Price = 100m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4865),
                            Description = "Konaklama süresince ücretsiz çamaşır ve kuru temizleme hizmeti.",
                            Name = "Çamaşırhane Hizmeti",
                            Price = 40m,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4874),
                            Description = "Ekstra günlük temizlik ve hijyen paketi.",
                            Name = "Günlük Oda Temizliği",
                            Price = 25m,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4875),
                            Description = "Özel şezlong ve plaj hizmetleri.",
                            Name = "Özel Plaj Alanı",
                            Price = 35m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4803),
                            Description = "Kahvaltı, öğle ve akşam yemeği dahil.",
                            Name = "Tam Pansiyon",
                            PriceMultiplier = 1.2m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 246, DateTimeKind.Local).AddTicks(4806),
                            Description = "Tüm yemekler, alkollü-alkolsüz içecekler ve otelin sunduğu belirli hizmetler dahil.",
                            Name = "Her Şey Dahil",
                            PriceMultiplier = 1.5m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.ReservationExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtraServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExtraServiceId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("HasAirConditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBalcony")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHairDryer")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMinibar")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTV")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("money");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(636),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 95.54m,
                            RoomNumber = "164",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(651),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 145.50m,
                            RoomNumber = "175",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(656),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 103.81m,
                            RoomNumber = "102",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(659),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 70.63m,
                            RoomNumber = "158",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(662),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 71.11m,
                            RoomNumber = "145",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(667),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 143.89m,
                            RoomNumber = "104",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(670),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 141.49m,
                            RoomNumber = "114",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(673),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 112.64m,
                            RoomNumber = "185",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(676),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 78.70m,
                            RoomNumber = "127",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(680),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 132.64m,
                            RoomNumber = "154",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(686),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 163.04m,
                            RoomNumber = "285",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(690),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 192.78m,
                            RoomNumber = "238",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(693),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 121.63m,
                            RoomNumber = "268",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(696),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 191.77m,
                            RoomNumber = "295",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(698),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 121.82m,
                            RoomNumber = "277",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(701),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 190.39m,
                            RoomNumber = "265",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(703),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 169.33m,
                            RoomNumber = "247",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(708),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 140.64m,
                            RoomNumber = "231",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(711),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 198.31m,
                            RoomNumber = "207",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(713),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 150.78m,
                            RoomNumber = "248",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(719),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 220.40m,
                            RoomNumber = "350",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(723),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 190.22m,
                            RoomNumber = "356",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(726),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 224.42m,
                            RoomNumber = "363",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(729),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 298.38m,
                            RoomNumber = "304",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(731),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 202.31m,
                            RoomNumber = "360",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(734),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 189.16m,
                            RoomNumber = "350",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(737),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 216.17m,
                            RoomNumber = "382",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(739),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 221.24m,
                            RoomNumber = "340",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(773),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 170.94m,
                            RoomNumber = "320",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(777),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 182.66m,
                            RoomNumber = "379",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(783),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 223.98m,
                            RoomNumber = "465",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(786),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 430.82m,
                            RoomNumber = "444",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(789),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 340.72m,
                            RoomNumber = "410",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(793),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 300.93m,
                            RoomNumber = "430",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(796),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 274.63m,
                            RoomNumber = "401",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(798),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 359.20m,
                            RoomNumber = "469",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(801),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 266.18m,
                            RoomNumber = "482",
                            RoomStatus = 3,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(804),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 281.41m,
                            RoomNumber = "429",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(806),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 312.16m,
                            RoomNumber = "457",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(808),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 294.46m,
                            RoomNumber = "488",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 162, DateTimeKind.Local).AddTicks(810),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "500",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 160, DateTimeKind.Local).AddTicks(3937),
                            Description = "1 adet tek kişilik yatak. Balkon ve minibar bulunmaz. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Tek Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 160, DateTimeKind.Local).AddTicks(3947),
                            Description = "1 adet büyük (duble) yatak. Minibar bulunur. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Çift Kişilik (Duble)",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 160, DateTimeKind.Local).AddTicks(3949),
                            Description = "3 adet tek kişilik yatak. Balkon ve minibar bulunmaz. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Üç Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 160, DateTimeKind.Local).AddTicks(3951),
                            Description = "1 adet büyük (duble) yatak + 2 adet tek kişilik yatak. Balkon ve minibar bulunur. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Dört Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 23, 15, 23, 44, 160, DateTimeKind.Local).AddTicks(3952),
                            Description = "Geniş ve lüks oda. Özel oturma alanı, büyük yatak, balkon, minibar, özel banyo ve lüks hizmetler. Klima, TV, saç kurutma makinesi, WiFi ve özel hizmetler mevcuttur.",
                            Name = "Kral Dairesi",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithOne("AppUserProfile")
                        .HasForeignKey("Project.Entities.Models.AppUserProfile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("Project.Entities.Models.Payment", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "Reservations")
                        .WithMany("Reservations")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("ManagedReservations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Package", "Package")
                        .WithMany("Reservations")
                        .HasForeignKey("PackageId");

                    b.HasOne("Project.Entities.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Package");

                    b.Navigation("Reservations");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.Entities.Models.ReservationExtraService", b =>
                {
                    b.HasOne("Project.Entities.Models.ExtraService", "ExtraService")
                        .WithMany("ReservationExtraServices")
                        .HasForeignKey("ExtraServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithMany("ReservationExtraServices")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.HasOne("Project.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Navigation("AppUserProfile")
                        .IsRequired();

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Navigation("ManagedReservations");
                });

            modelBuilder.Entity("Project.Entities.Models.ExtraService", b =>
                {
                    b.Navigation("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
