// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Dal.ContextClasses;

#nullable disable

namespace Project.Dal.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250210193613_Mig1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Entities.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "859a4f25-a55f-4724-9622-9a4062d741e3",
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5820),
                            Name = "Admin",
                            NormalizedName = "ADMIN",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "1a4ca70b-04eb-4146-a98b-3ee93322b155",
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 267, DateTimeKind.Local).AddTicks(2752),
                            Email = "bilgehotel@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BILGEHOTEL@EMAIL.COM",
                            NormalizedUserName = "BILGEHOTEL",
                            PasswordHash = "AQAAAAIAAYagAAAAECeXHvLMYPsJIai8k1HoVOsPd0FZK8i9mAi8XCZSqIV1gsdZJVKRTX+nHzeaOKa6Pg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "676db23f-0142-4177-8cbe-74434f0e499b",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "bilgehotel"
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique()
                        .HasFilter("[AppUserId] IS NOT NULL");

                    b.ToTable("AppUserProfiles");
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId", "RoleId")
                        .IsUnique();

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 267, DateTimeKind.Local).AddTicks(2888),
                            RoleId = 1,
                            Status = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Project.Entities.Models.CustomerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerDetails");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(2552),
                            FirstName = "Adalan",
                            LastName = "Tazegül",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(2840),
                            FirstName = "Bekbekeç",
                            LastName = "Mayhoş",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(2937),
                            FirstName = "Güzey",
                            LastName = "Özdoğan",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(2987),
                            FirstName = "Arademir",
                            LastName = "Akaydın",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3071),
                            FirstName = "Büre",
                            LastName = "Kuday",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3149),
                            FirstName = "Kayaçık",
                            LastName = "Durmaz",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3196),
                            FirstName = "Baçman",
                            LastName = "Akgül",
                            Position = "Resepsiyonist",
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3268),
                            FirstName = "Bilgekutluk",
                            LastName = "Oraloğlu",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3340),
                            FirstName = "Aşanboğa",
                            LastName = "Özgörkey",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3417),
                            FirstName = "Bangu",
                            LastName = "Beşok",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3465),
                            FirstName = "İrinçköl",
                            LastName = "Türkyılmaz",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3535),
                            FirstName = "Bayankağan",
                            LastName = "Uca",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3595),
                            FirstName = "Biçek",
                            LastName = "Pekkan",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3671),
                            FirstName = "İlgegü",
                            LastName = "Dağlaroğlu",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3727),
                            FirstName = "Altınkan",
                            LastName = "Sadıklar",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3802),
                            FirstName = "Akbörü",
                            LastName = "Yıldırım ",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3877),
                            FirstName = "Alaban",
                            LastName = "Erberk",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3952),
                            FirstName = "Altınkağan",
                            LastName = "Mayhoş",
                            Position = "Temizlik Görevlisi",
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3996),
                            FirstName = "Başak",
                            LastName = "Durmaz",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4066),
                            FirstName = "İtil",
                            LastName = "Barbarosoğlu",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4132),
                            FirstName = "Bayındır",
                            LastName = "Ilıcalı",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4203),
                            FirstName = "Ediz",
                            LastName = "Ilıcalı",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4249),
                            FirstName = "Alparslan",
                            LastName = "Çağıran",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4314),
                            FirstName = "Bekazıl",
                            LastName = "Abacı",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4382),
                            FirstName = "Armağan",
                            LastName = "Beşok",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4457),
                            FirstName = "Barçan",
                            LastName = "Günday",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4503),
                            FirstName = "Bars",
                            LastName = "Aşıkoğlu",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4587),
                            FirstName = "Altınkağan",
                            LastName = "Tokatlıoğlu",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4659),
                            FirstName = "İnci",
                            LastName = "Topçuoğlu",
                            Position = "Aşçı",
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4703),
                            FirstName = "Adsız",
                            LastName = "Sarıoğlu",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4768),
                            FirstName = "Atımer",
                            LastName = "Balcı",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4840),
                            FirstName = "Benlidemir",
                            LastName = "Sandalcı",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4907),
                            FirstName = "Çobulmak",
                            LastName = "Dağlaroğlu",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4957),
                            FirstName = "Altınkan",
                            LastName = "Pektemek",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5015),
                            FirstName = "Bek",
                            LastName = "Kumcuoğlu",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5091),
                            FirstName = "Ayyıldız",
                            LastName = "Paksüt",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5165),
                            FirstName = "Bek",
                            LastName = "Çamdalı",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5210),
                            FirstName = "Börü",
                            LastName = "Ekşioğlu",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5276),
                            FirstName = "Asuğ",
                            LastName = "Kocabıyık",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5342),
                            FirstName = "Begitutuk",
                            LastName = "Çatalbaş",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5407),
                            FirstName = "Afşar",
                            LastName = "Atakol",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5451),
                            FirstName = "Beğkulu",
                            LastName = "Demirbaş",
                            Position = "Garson",
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5518),
                            FirstName = "Katun",
                            LastName = "Kumcuoğlu",
                            Position = "Elektrikçi",
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5583),
                            FirstName = "Bamsı",
                            LastName = "Özkara",
                            Position = "IT Sorumlusu",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.EmployeeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Köypınar Sokak 00, Gaziantep, Andorra",
                            BirthDate = new DateTime(1998, 8, 21, 15, 51, 55, 984, DateTimeKind.Local).AddTicks(5114),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(2831),
                            EmployeeId = 1,
                            HireDate = new DateTime(2015, 11, 28, 13, 56, 44, 31, DateTimeKind.Local).AddTicks(3555),
                            PhoneNumber = "+90-125-361-1-267",
                            Salary = 37701.88m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Bayır Sokak 51a, Bingöl, Monako",
                            BirthDate = new DateTime(1972, 7, 8, 10, 55, 8, 895, DateTimeKind.Local).AddTicks(5677),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(2902),
                            EmployeeId = 2,
                            HireDate = new DateTime(2019, 8, 14, 15, 3, 26, 942, DateTimeKind.Local).AddTicks(3573),
                            PhoneNumber = "+90-197-123-52-33",
                            Salary = 44476.23m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Bandak Sokak 60a, Niğde, Nauru",
                            BirthDate = new DateTime(1995, 1, 6, 7, 13, 42, 887, DateTimeKind.Local).AddTicks(5301),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(2981),
                            EmployeeId = 3,
                            HireDate = new DateTime(2021, 4, 28, 21, 16, 5, 32, DateTimeKind.Local).AddTicks(4444),
                            PhoneNumber = "+90-627-430-8-531",
                            Salary = 15774.05m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Kekeçoğlu Sokak 01, Yalova, Komorlar",
                            BirthDate = new DateTime(2002, 10, 29, 22, 3, 28, 34, DateTimeKind.Local).AddTicks(154),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3065),
                            EmployeeId = 4,
                            HireDate = new DateTime(2015, 8, 10, 22, 21, 35, 664, DateTimeKind.Local).AddTicks(9160),
                            PhoneNumber = "+90-145-355-3-265",
                            Salary = 44455.67m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "Okul Sokak 11b, Yozgat, Tanzanya",
                            BirthDate = new DateTime(1985, 8, 1, 22, 41, 56, 836, DateTimeKind.Local).AddTicks(3520),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3142),
                            EmployeeId = 5,
                            HireDate = new DateTime(2018, 2, 1, 11, 11, 23, 525, DateTimeKind.Local).AddTicks(976),
                            PhoneNumber = "+90-705-849-5-764",
                            Salary = 35421.81m,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Atatürk Bulvarı 98, Van, Nikaragua",
                            BirthDate = new DateTime(1992, 7, 18, 13, 30, 0, 617, DateTimeKind.Local).AddTicks(1857),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3190),
                            EmployeeId = 6,
                            HireDate = new DateTime(2023, 12, 23, 10, 18, 40, 341, DateTimeKind.Local).AddTicks(6127),
                            PhoneNumber = "+90-807-261-9-285",
                            Salary = 29491.24m,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "Kerimoğlu Sokak 80a, Kastamonu, Porto Riko, Amerika",
                            BirthDate = new DateTime(1996, 4, 14, 11, 23, 29, 979, DateTimeKind.Local).AddTicks(2943),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3261),
                            EmployeeId = 7,
                            HireDate = new DateTime(2014, 8, 7, 7, 33, 4, 807, DateTimeKind.Local).AddTicks(4126),
                            PhoneNumber = "+90-531-723-32-18",
                            Salary = 40151.25m,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "Oğuzhan Sokak 40b, Ardahan, Grönland",
                            BirthDate = new DateTime(1972, 2, 10, 21, 7, 33, 275, DateTimeKind.Local).AddTicks(9636),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3334),
                            EmployeeId = 8,
                            HireDate = new DateTime(2021, 8, 5, 11, 31, 43, 375, DateTimeKind.Local).AddTicks(4448),
                            PhoneNumber = "+90-832-364-4-728",
                            Salary = 37457.51m,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = "İbn-i Sina Sokak 30, Ağrı, Tayland",
                            BirthDate = new DateTime(1977, 8, 6, 13, 54, 54, 358, DateTimeKind.Local).AddTicks(6240),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3406),
                            EmployeeId = 9,
                            HireDate = new DateTime(2015, 8, 30, 20, 57, 59, 23, DateTimeKind.Local).AddTicks(8921),
                            PhoneNumber = "+90-088-197-9-519",
                            Salary = 15506.60m,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "Ülkü Sokak 19, Bartın, Bermuda, İngiltere",
                            BirthDate = new DateTime(1977, 6, 27, 15, 49, 28, 207, DateTimeKind.Local).AddTicks(651),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3459),
                            EmployeeId = 10,
                            HireDate = new DateTime(2022, 12, 27, 5, 20, 25, 665, DateTimeKind.Local).AddTicks(6344),
                            PhoneNumber = "+90-277-942-25-60",
                            Salary = 45103.76m,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            Address = "Atatürk Bulvarı 167, Kastamonu, Anguilla, İngiltere",
                            BirthDate = new DateTime(1985, 1, 12, 14, 26, 8, 851, DateTimeKind.Local).AddTicks(3177),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3529),
                            EmployeeId = 11,
                            HireDate = new DateTime(2021, 10, 10, 20, 57, 49, 256, DateTimeKind.Local).AddTicks(8547),
                            PhoneNumber = "+90-126-819-6-149",
                            Salary = 28447.21m,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            Address = "Dar Sokak 78b, Kırşehir, Venezuela",
                            BirthDate = new DateTime(1981, 7, 16, 7, 43, 24, 759, DateTimeKind.Local).AddTicks(3144),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3589),
                            EmployeeId = 12,
                            HireDate = new DateTime(2022, 7, 10, 8, 51, 30, 119, DateTimeKind.Local).AddTicks(2671),
                            PhoneNumber = "+90-618-012-66-45",
                            Salary = 39042.29m,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Address = "Lütfi Karadirek Caddesi 181, Amasya, Almanya",
                            BirthDate = new DateTime(1983, 8, 4, 9, 41, 35, 334, DateTimeKind.Local).AddTicks(6045),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3666),
                            EmployeeId = 13,
                            HireDate = new DateTime(2023, 1, 15, 9, 52, 16, 808, DateTimeKind.Local).AddTicks(5361),
                            PhoneNumber = "+90-497-035-6-387",
                            Salary = 43254.27m,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Address = "Sağlık Sokak 8, İzmir, Kamboçya",
                            BirthDate = new DateTime(1985, 10, 23, 20, 17, 53, 848, DateTimeKind.Local).AddTicks(4838),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3713),
                            EmployeeId = 14,
                            HireDate = new DateTime(2023, 1, 22, 21, 39, 13, 844, DateTimeKind.Local).AddTicks(9740),
                            PhoneNumber = "+90-299-051-6-883",
                            Salary = 24147.87m,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            Address = "Ali Çetinkaya Caddesi 51a, Karabük, Papua Yeni Gine",
                            BirthDate = new DateTime(1969, 6, 28, 11, 42, 58, 715, DateTimeKind.Local).AddTicks(7767),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3797),
                            EmployeeId = 15,
                            HireDate = new DateTime(2014, 11, 8, 23, 41, 28, 670, DateTimeKind.Local).AddTicks(3476),
                            PhoneNumber = "+90-819-244-64-77",
                            Salary = 42141.61m,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            Address = "Sarıkaya Caddesi 185, Uşak, Honduras",
                            BirthDate = new DateTime(1999, 3, 26, 7, 36, 3, 993, DateTimeKind.Local).AddTicks(7914),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3866),
                            EmployeeId = 16,
                            HireDate = new DateTime(2016, 1, 10, 23, 40, 44, 429, DateTimeKind.Local).AddTicks(3713),
                            PhoneNumber = "+90-309-659-0-128",
                            Salary = 38440.51m,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            Address = "Oğuzhan Sokak 89c, Yozgat, Cayman Adaları, İngiltere",
                            BirthDate = new DateTime(1981, 3, 5, 10, 32, 38, 581, DateTimeKind.Local).AddTicks(7482),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3944),
                            EmployeeId = 17,
                            HireDate = new DateTime(2015, 1, 25, 4, 51, 22, 76, DateTimeKind.Local).AddTicks(5369),
                            PhoneNumber = "+90-971-484-08-20",
                            Salary = 18024.41m,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            Address = "Güven Yaka Sokak 9, Afyon, Moritanya",
                            BirthDate = new DateTime(2004, 12, 19, 13, 29, 37, 267, DateTimeKind.Local).AddTicks(1247),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(3992),
                            EmployeeId = 18,
                            HireDate = new DateTime(2015, 6, 8, 17, 36, 13, 642, DateTimeKind.Local).AddTicks(3555),
                            PhoneNumber = "+90-148-392-66-48",
                            Salary = 38152.87m,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            Address = "Sevgi Sokak 32a, Tekirdağ, Suriye",
                            BirthDate = new DateTime(1983, 1, 14, 7, 51, 35, 180, DateTimeKind.Local).AddTicks(682),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4060),
                            EmployeeId = 19,
                            HireDate = new DateTime(2023, 10, 25, 5, 13, 11, 170, DateTimeKind.Local).AddTicks(3446),
                            PhoneNumber = "+90-278-399-2-041",
                            Salary = 48401.59m,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            Address = "Ali Çetinkaya Caddesi 98a, Yalova, Çin",
                            BirthDate = new DateTime(1982, 9, 18, 9, 43, 26, 82, DateTimeKind.Local).AddTicks(5666),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4127),
                            EmployeeId = 20,
                            HireDate = new DateTime(2016, 4, 15, 10, 3, 15, 782, DateTimeKind.Local).AddTicks(7129),
                            PhoneNumber = "+90-805-812-5-613",
                            Salary = 30632.19m,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            Address = "Harman Altı Sokak 58c, Siirt, Monako",
                            BirthDate = new DateTime(1968, 6, 1, 16, 37, 57, 60, DateTimeKind.Local).AddTicks(2407),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4197),
                            EmployeeId = 21,
                            HireDate = new DateTime(2015, 2, 27, 15, 0, 29, 881, DateTimeKind.Local).AddTicks(6904),
                            PhoneNumber = "+90-739-304-0-953",
                            Salary = 34829.41m,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            Address = "Dağınık Evler Sokak 0, Bursa, Lesotho",
                            BirthDate = new DateTime(1980, 12, 5, 12, 33, 29, 428, DateTimeKind.Local).AddTicks(6344),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4243),
                            EmployeeId = 22,
                            HireDate = new DateTime(2023, 3, 28, 3, 29, 24, 882, DateTimeKind.Local).AddTicks(8645),
                            PhoneNumber = "+90-881-510-4-914",
                            Salary = 17412.73m,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            Address = "Kekeçoğlu Sokak 01c, K.maraş, Sırbistan",
                            BirthDate = new DateTime(1983, 4, 24, 23, 19, 3, 382, DateTimeKind.Local).AddTicks(5952),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4303),
                            EmployeeId = 23,
                            HireDate = new DateTime(2017, 7, 27, 0, 12, 28, 63, DateTimeKind.Local).AddTicks(2575),
                            PhoneNumber = "+90-932-959-0-390",
                            Salary = 47401.04m,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            Address = "Güven Yaka Sokak 72, Bingöl, Angola",
                            BirthDate = new DateTime(1989, 7, 13, 13, 57, 43, 527, DateTimeKind.Local).AddTicks(8212),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4378),
                            EmployeeId = 24,
                            HireDate = new DateTime(2021, 1, 15, 22, 32, 13, 445, DateTimeKind.Local).AddTicks(3005),
                            PhoneNumber = "+90-063-514-40-89",
                            Salary = 43808.16m,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            Address = "Nalbant Sokak 59, Diyarbakır, Cibuti",
                            BirthDate = new DateTime(1981, 12, 9, 23, 0, 0, 458, DateTimeKind.Local).AddTicks(6852),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4452),
                            EmployeeId = 25,
                            HireDate = new DateTime(2014, 6, 19, 5, 49, 13, 559, DateTimeKind.Local).AddTicks(8996),
                            PhoneNumber = "+90-705-982-6-156",
                            Salary = 40198.04m,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            Address = "Gül Sokak 169, Gümüşhane, İspanya",
                            BirthDate = new DateTime(1983, 3, 21, 10, 50, 7, 654, DateTimeKind.Local).AddTicks(9247),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4498),
                            EmployeeId = 26,
                            HireDate = new DateTime(2017, 7, 6, 5, 49, 16, 657, DateTimeKind.Local).AddTicks(6561),
                            PhoneNumber = "+90-802-401-42-12",
                            Salary = 37369.21m,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            Address = "Okul Sokak 81c, Bilecik, Birleşik Arap Emirlikleri",
                            BirthDate = new DateTime(2003, 11, 8, 23, 16, 49, 571, DateTimeKind.Local).AddTicks(2056),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4583),
                            EmployeeId = 27,
                            HireDate = new DateTime(2016, 12, 10, 2, 50, 59, 534, DateTimeKind.Local).AddTicks(7595),
                            PhoneNumber = "+90-958-039-38-72",
                            Salary = 31970.99m,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            Address = "Ergenekon Sokak   46b, Çanakkale, Türkiye",
                            BirthDate = new DateTime(1985, 7, 18, 8, 35, 9, 188, DateTimeKind.Local).AddTicks(9241),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4653),
                            EmployeeId = 28,
                            HireDate = new DateTime(2015, 5, 9, 23, 39, 34, 304, DateTimeKind.Local).AddTicks(1508),
                            PhoneNumber = "+90-687-316-77-17",
                            Salary = 22685.21m,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            Address = "Yunus Emre Sokak 26b, Adana, Monako",
                            BirthDate = new DateTime(1988, 4, 5, 12, 8, 19, 505, DateTimeKind.Local).AddTicks(8414),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4698),
                            EmployeeId = 29,
                            HireDate = new DateTime(2022, 11, 24, 3, 30, 50, 652, DateTimeKind.Local).AddTicks(327),
                            PhoneNumber = "+90-243-686-16-47",
                            Salary = 46178.39m,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            Address = "Dar Sokak 2, Sinop, Kenya",
                            BirthDate = new DateTime(1971, 10, 28, 21, 15, 53, 734, DateTimeKind.Local).AddTicks(4541),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4764),
                            EmployeeId = 30,
                            HireDate = new DateTime(2015, 7, 18, 4, 16, 18, 840, DateTimeKind.Local).AddTicks(7731),
                            PhoneNumber = "+90-293-694-28-03",
                            Salary = 30803.06m,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            Address = "Oğuzhan Sokak 9, Konya, Tonga",
                            BirthDate = new DateTime(1983, 10, 12, 12, 51, 32, 636, DateTimeKind.Local).AddTicks(1962),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4834),
                            EmployeeId = 31,
                            HireDate = new DateTime(2016, 11, 29, 23, 17, 43, 501, DateTimeKind.Local).AddTicks(4784),
                            PhoneNumber = "+90-909-153-7-569",
                            Salary = 17243.63m,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            Address = "Atatürk Bulvarı 8, Bayburt, Endonezya",
                            BirthDate = new DateTime(1988, 12, 7, 10, 4, 55, 444, DateTimeKind.Local).AddTicks(6028),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4902),
                            EmployeeId = 32,
                            HireDate = new DateTime(2015, 7, 5, 9, 2, 6, 189, DateTimeKind.Local).AddTicks(9131),
                            PhoneNumber = "+90-130-850-40-09",
                            Salary = 34102.49m,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            Address = "Saygılı Sokak 37c, Kırklareli, Jamaika",
                            BirthDate = new DateTime(1968, 7, 24, 0, 36, 51, 265, DateTimeKind.Local).AddTicks(5458),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(4952),
                            EmployeeId = 33,
                            HireDate = new DateTime(2022, 12, 23, 0, 40, 45, 397, DateTimeKind.Local).AddTicks(9853),
                            PhoneNumber = "+90-457-644-5-752",
                            Salary = 24475.33m,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            Address = "Mevlana Sokak 11, Şırnak, İspanya",
                            BirthDate = new DateTime(2005, 12, 4, 22, 7, 39, 561, DateTimeKind.Local).AddTicks(1443),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5010),
                            EmployeeId = 34,
                            HireDate = new DateTime(2019, 6, 17, 10, 27, 51, 714, DateTimeKind.Local).AddTicks(4342),
                            PhoneNumber = "+90-991-640-46-48",
                            Salary = 36679.47m,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            Address = "Afyon Kaya Sokak 88, Şanlıurfa, Meksika",
                            BirthDate = new DateTime(1968, 9, 8, 1, 55, 58, 400, DateTimeKind.Local).AddTicks(5579),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5084),
                            EmployeeId = 35,
                            HireDate = new DateTime(2014, 8, 21, 1, 50, 4, 37, DateTimeKind.Local).AddTicks(8765),
                            PhoneNumber = "+90-731-290-71-77",
                            Salary = 20995.96m,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            Address = "Gül Sokak 00a, Sinop, Japonya",
                            BirthDate = new DateTime(2002, 8, 25, 15, 41, 17, 329, DateTimeKind.Local).AddTicks(5510),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5158),
                            EmployeeId = 36,
                            HireDate = new DateTime(2019, 9, 12, 14, 39, 38, 785, DateTimeKind.Local).AddTicks(9834),
                            PhoneNumber = "+90-935-958-09-93",
                            Salary = 31506.61m,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            Address = "Kocatepe Caddesi 90, Kırıkkale, Slovenya",
                            BirthDate = new DateTime(1982, 1, 20, 6, 21, 9, 224, DateTimeKind.Local).AddTicks(2860),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5204),
                            EmployeeId = 37,
                            HireDate = new DateTime(2023, 3, 25, 20, 54, 44, 312, DateTimeKind.Local).AddTicks(7831),
                            PhoneNumber = "+90-310-018-04-49",
                            Salary = 45314.01m,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            Address = "Sağlık Sokak 430, Sivas, Portekiz",
                            BirthDate = new DateTime(1996, 4, 14, 9, 15, 37, 407, DateTimeKind.Local).AddTicks(3792),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5271),
                            EmployeeId = 38,
                            HireDate = new DateTime(2014, 12, 6, 19, 5, 2, 395, DateTimeKind.Local).AddTicks(3011),
                            PhoneNumber = "+90-440-324-83-04",
                            Salary = 32657.98m,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            Address = "Dar Sokak 57a, Sakarya, Karadağ",
                            BirthDate = new DateTime(1998, 5, 1, 7, 31, 3, 260, DateTimeKind.Local).AddTicks(1750),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5337),
                            EmployeeId = 39,
                            HireDate = new DateTime(2016, 4, 4, 10, 20, 4, 887, DateTimeKind.Local).AddTicks(9700),
                            PhoneNumber = "+90-663-118-46-74",
                            Salary = 44408.06m,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            Address = "Sevgi Sokak 421, Burdur, İzlanda",
                            BirthDate = new DateTime(1983, 7, 19, 3, 19, 18, 86, DateTimeKind.Local).AddTicks(2200),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5402),
                            EmployeeId = 40,
                            HireDate = new DateTime(2021, 9, 5, 11, 50, 27, 713, DateTimeKind.Local).AddTicks(9176),
                            PhoneNumber = "+90-454-444-6-834",
                            Salary = 20715.71m,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            Address = "Sıran Söğüt Sokak 9, Uşak, Karadağ",
                            BirthDate = new DateTime(1972, 8, 18, 12, 23, 10, 596, DateTimeKind.Local).AddTicks(8024),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5444),
                            EmployeeId = 41,
                            HireDate = new DateTime(2021, 9, 10, 18, 18, 52, 419, DateTimeKind.Local).AddTicks(3273),
                            PhoneNumber = "+90-620-905-4-620",
                            Salary = 49059.40m,
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            Address = "Mevlana Sokak 54, Erzurum, Tonga",
                            BirthDate = new DateTime(2002, 10, 16, 12, 23, 10, 933, DateTimeKind.Local).AddTicks(1894),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5514),
                            EmployeeId = 42,
                            HireDate = new DateTime(2019, 8, 14, 12, 35, 14, 303, DateTimeKind.Local).AddTicks(3028),
                            PhoneNumber = "+90-864-040-90-47",
                            Salary = 17956.04m,
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            Address = "Sarıkaya Caddesi 24c, Bartın, Kosta Rika",
                            BirthDate = new DateTime(2006, 8, 14, 2, 6, 39, 493, DateTimeKind.Local).AddTicks(7295),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5578),
                            EmployeeId = 43,
                            HireDate = new DateTime(2021, 7, 7, 16, 24, 0, 284, DateTimeKind.Local).AddTicks(5372),
                            PhoneNumber = "+90-811-924-94-77",
                            Salary = 16721.86m,
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            Address = "Tevfik Fikret Caddesi 0, Manisa, Burundi",
                            BirthDate = new DateTime(1975, 3, 17, 17, 47, 44, 907, DateTimeKind.Local).AddTicks(5432),
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 228, DateTimeKind.Local).AddTicks(5622),
                            EmployeeId = 44,
                            HireDate = new DateTime(2019, 9, 18, 8, 36, 49, 183, DateTimeKind.Local).AddTicks(6589),
                            PhoneNumber = "+90-813-966-1-093",
                            Salary = 27449.91m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.EmployeeShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.HasIndex("EmployeeId", "ShiftId")
                        .IsUnique();

                    b.ToTable("EmployeeShifts");
                });

            modelBuilder.Entity("Project.Entities.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("money");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1289),
                            Floor = 1,
                            PricePerNight = 99.21m,
                            RoomNumber = "177",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1303),
                            Floor = 1,
                            PricePerNight = 181.09m,
                            RoomNumber = "185",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1306),
                            Floor = 1,
                            PricePerNight = 167.79m,
                            RoomNumber = "185",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1311),
                            Floor = 1,
                            PricePerNight = 75.11m,
                            RoomNumber = "105",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1319),
                            Floor = 1,
                            PricePerNight = 158.03m,
                            RoomNumber = "156",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1322),
                            Floor = 1,
                            PricePerNight = 101.91m,
                            RoomNumber = "174",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1325),
                            Floor = 1,
                            PricePerNight = 67.77m,
                            RoomNumber = "134",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1328),
                            Floor = 1,
                            PricePerNight = 116.62m,
                            RoomNumber = "147",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1330),
                            Floor = 1,
                            PricePerNight = 71.50m,
                            RoomNumber = "151",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 227, DateTimeKind.Local).AddTicks(1333),
                            Floor = 1,
                            PricePerNight = 57.57m,
                            RoomNumber = "157",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 117.54m,
                            RoomNumber = "282",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 180.31m,
                            RoomNumber = "213",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 178.38m,
                            RoomNumber = "220",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 199.30m,
                            RoomNumber = "252",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 183.84m,
                            RoomNumber = "247",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 177.57m,
                            RoomNumber = "289",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 122.02m,
                            RoomNumber = "200",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 144.92m,
                            RoomNumber = "250",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 148.03m,
                            RoomNumber = "282",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 2,
                            PricePerNight = 188.86m,
                            RoomNumber = "218",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 290.58m,
                            RoomNumber = "363",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 249.12m,
                            RoomNumber = "350",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 171.12m,
                            RoomNumber = "385",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 277.32m,
                            RoomNumber = "376",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 218.82m,
                            RoomNumber = "359",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 176.52m,
                            RoomNumber = "328",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 179.19m,
                            RoomNumber = "388",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 239.46m,
                            RoomNumber = "347",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 187.87m,
                            RoomNumber = "393",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 3,
                            PricePerNight = 237.12m,
                            RoomNumber = "379",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 324.99m,
                            RoomNumber = "468",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 460.50m,
                            RoomNumber = "424",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 335.59m,
                            RoomNumber = "478",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 249.26m,
                            RoomNumber = "494",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 209.14m,
                            RoomNumber = "418",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 391.61m,
                            RoomNumber = "413",
                            RoomStatus = 3,
                            RoomTypeId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 396.42m,
                            RoomNumber = "413",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 335.23m,
                            RoomNumber = "439",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 463.24m,
                            RoomNumber = "405",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 228.41m,
                            RoomNumber = "488",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Floor = 4,
                            PricePerNight = 1000m,
                            RoomNumber = "500",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.RoomFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("RoomId", "FeatureId")
                        .IsUnique();

                    b.ToTable("RoomFeatures");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 225, DateTimeKind.Local).AddTicks(6242),
                            Description = "1 tek kişilik yatak",
                            Name = "Tek Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 225, DateTimeKind.Local).AddTicks(6253),
                            Description = "1 büyük yatak",
                            Name = "Çift Kişilik (Duble)",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 225, DateTimeKind.Local).AddTicks(6255),
                            Description = "3 tek kişilik yatak",
                            Name = "Üç Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 225, DateTimeKind.Local).AddTicks(6256),
                            Description = "1 büyük + 2 tek kişilik yatak",
                            Name = "Dört Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 10, 22, 36, 13, 225, DateTimeKind.Local).AddTicks(6257),
                            Description = "Lüks konaklama, özel hizmetler",
                            Name = "Kral Dairesi",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithOne("AppUserProfile")
                        .HasForeignKey("Project.Entities.Models.AppUserProfile", "AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserRole", b =>
                {
                    b.HasOne("Project.Entities.Models.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.AppUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Entities.Models.Customer", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithMany("Customers")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.CustomerDetail", b =>
                {
                    b.HasOne("Project.Entities.Models.Customer", "Customer")
                        .WithOne("CustomerDetail")
                        .HasForeignKey("Project.Entities.Models.CustomerDetail", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Project.Entities.Models.EmployeeDetail", b =>
                {
                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithOne("EmployeeDetail")
                        .HasForeignKey("Project.Entities.Models.EmployeeDetail", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Project.Entities.Models.EmployeeShift", b =>
                {
                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Shift", "Shift")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("Project.Entities.Models.Payment", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.HasOne("Project.Entities.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("ManagedReservations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Package", "Package")
                        .WithMany("Reservations")
                        .HasForeignKey("PackageId");

                    b.HasOne("Project.Entities.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("Package");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.HasOne("Project.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomFeature", b =>
                {
                    b.HasOne("Project.Entities.Models.Feature", "Feature")
                        .WithMany("RoomFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Room", "Room")
                        .WithMany("RoomFeatures")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.Entities.Models.AppRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Navigation("AppUserProfile")
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Project.Entities.Models.Customer", b =>
                {
                    b.Navigation("CustomerDetail")
                        .IsRequired();

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Navigation("EmployeeDetail")
                        .IsRequired();

                    b.Navigation("EmployeeShifts");

                    b.Navigation("ManagedReservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Feature", b =>
                {
                    b.Navigation("RoomFeatures");
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("RoomFeatures");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Project.Entities.Models.Shift", b =>
                {
                    b.Navigation("EmployeeShifts");
                });
#pragma warning restore 612, 618
        }
    }
}
