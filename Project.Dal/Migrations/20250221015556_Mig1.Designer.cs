// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Dal.ContextClasses;

#nullable disable

namespace Project.Dal.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250221015556_Mig1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "e866e3c6-c9de-4e0c-a5d4-0e36ab251bcd",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "efcd4aa6-c2c5-4a1e-8143-b712a21ca20d",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ActivationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "d7b096d4-a002-4e41-91c8-e6b9211a98a7",
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 903, DateTimeKind.Local).AddTicks(3489),
                            Email = "bilgehotel@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BILGEHOTEL@EMAIL.COM",
                            NormalizedUserName = "BILGEHOTEL",
                            PasswordHash = "AQAAAAIAAYagAAAAELh0/TlxTvj0z8/x5Qh+cLw02v3VgNyLRiwgfActC3FzcS+zxl3pRfGTJrUHfPP4Fg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "68779767-fe0b-4604-a326-8ac3793e7b47",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "bilgehotel"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ActivationCode = new Guid("00000000-0000-0000-0000-000000000000"),
                            ConcurrencyStamp = "47c04f04-ed41-4616-a37a-5363096e78ac",
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(2860),
                            Email = "testmember@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TESTMEMBER@EMAIL.COM",
                            NormalizedUserName = "TESTMEMBER",
                            PasswordHash = "AQAAAAIAAYagAAAAEDFPxQlOcG2vFS5VdLyR+Ouvd0vh9b1rt49ID2szh4MLmc9qT7FORqSaeRXnmnVaxQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b2e0b876-2bec-43ce-bf27-d8f3c4c396a2",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "testmember"
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("AppUserProfiles");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Shift")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "İbn-i Sina Sokak 79a, Bingöl, Makau (Makao)",
                            BirthDate = new DateTime(1970, 4, 23, 14, 54, 57, 92, DateTimeKind.Local).AddTicks(8832),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(3346),
                            FirstName = "Buyat",
                            HireDate = new DateTime(2014, 3, 27, 6, 22, 11, 890, DateTimeKind.Local).AddTicks(1618),
                            LastName = "Balcı",
                            PhoneNumber = "+90-679-160-21-48",
                            Salary = 140.90m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "30 Ağustos Caddesi 9, Denizli, Polonya",
                            BirthDate = new DateTime(1978, 5, 3, 21, 3, 19, 27, DateTimeKind.Local).AddTicks(705),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(3490),
                            FirstName = "Kızdurmuş",
                            HireDate = new DateTime(2023, 6, 22, 6, 50, 18, 821, DateTimeKind.Local).AddTicks(4949),
                            LastName = "Abadan",
                            PhoneNumber = "+90-291-360-6-708",
                            Salary = 126.69m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Barış Sokak 64c, Kilis, Saint Helena, İngiltere",
                            BirthDate = new DateTime(1990, 1, 15, 9, 23, 17, 726, DateTimeKind.Local).AddTicks(9866),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(3567),
                            FirstName = "Aladoğan",
                            HireDate = new DateTime(2018, 3, 28, 4, 1, 37, 935, DateTimeKind.Local).AddTicks(860),
                            LastName = "Çetiner",
                            PhoneNumber = "+90-539-211-2-860",
                            Salary = 123.39m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Sevgi Sokak 69a, Tekirdağ, Slovakya",
                            BirthDate = new DateTime(1970, 4, 23, 22, 14, 44, 502, DateTimeKind.Local).AddTicks(3610),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(3671),
                            FirstName = "Altınoba",
                            HireDate = new DateTime(2015, 1, 24, 1, 31, 24, 309, DateTimeKind.Local).AddTicks(213),
                            LastName = "Akşit",
                            PhoneNumber = "+90-131-668-85-57",
                            Salary = 123.63m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "Harman Altı Sokak 253, Çankırı, İspanya",
                            BirthDate = new DateTime(1970, 7, 26, 9, 38, 12, 409, DateTimeKind.Local).AddTicks(2482),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(3781),
                            FirstName = "Açığ",
                            HireDate = new DateTime(2018, 7, 1, 12, 47, 9, 969, DateTimeKind.Local).AddTicks(936),
                            LastName = "Kıraç ",
                            PhoneNumber = "+90-528-607-6-906",
                            Salary = 151.24m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "İsmet Attila Caddesi 70b, Artvin, Malezya",
                            BirthDate = new DateTime(1979, 11, 3, 15, 6, 38, 620, DateTimeKind.Local).AddTicks(3537),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(3925),
                            FirstName = "Eyiz",
                            HireDate = new DateTime(2019, 6, 5, 4, 28, 46, 572, DateTimeKind.Local).AddTicks(7138),
                            LastName = "Paksüt",
                            PhoneNumber = "+90-260-912-0-892",
                            Salary = 122.02m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "Afyon Kaya Sokak 7, K.maraş, Fas",
                            BirthDate = new DateTime(1969, 10, 11, 4, 10, 37, 691, DateTimeKind.Local).AddTicks(4919),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(3998),
                            FirstName = "Arslanargun",
                            HireDate = new DateTime(2017, 6, 24, 8, 44, 24, 66, DateTimeKind.Local).AddTicks(9015),
                            LastName = "Özbir",
                            PhoneNumber = "+90-346-168-0-101",
                            Salary = 150.42m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "Sağlık Sokak 6, Konya, Şili",
                            BirthDate = new DateTime(1972, 3, 15, 6, 41, 53, 739, DateTimeKind.Local).AddTicks(982),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4093),
                            FirstName = "Bayınçur",
                            HireDate = new DateTime(2017, 5, 16, 15, 12, 54, 468, DateTimeKind.Local).AddTicks(1474),
                            LastName = "Çağıran",
                            PhoneNumber = "+90-151-782-98-04",
                            Salary = 121.54m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            Address = "Oğuzhan Sokak 48b, Şanlıurfa, Uruguay",
                            BirthDate = new DateTime(2004, 7, 31, 1, 58, 39, 832, DateTimeKind.Local).AddTicks(2019),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4226),
                            FirstName = "Inanç",
                            HireDate = new DateTime(2022, 7, 9, 14, 1, 6, 524, DateTimeKind.Local).AddTicks(9012),
                            LastName = "Beşerler",
                            PhoneNumber = "+90-203-641-85-97",
                            Salary = 138.58m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            Address = "Saygılı Sokak 48, Ordu, Hırvatistan",
                            BirthDate = new DateTime(2002, 1, 2, 10, 24, 0, 471, DateTimeKind.Local).AddTicks(8630),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4350),
                            FirstName = "Aygırak",
                            HireDate = new DateTime(2023, 11, 19, 12, 42, 7, 907, DateTimeKind.Local).AddTicks(6158),
                            LastName = "Ertepınar",
                            PhoneNumber = "+90-058-947-3-101",
                            Salary = 116.99m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            Address = "Ali Çetinkaya Caddesi 3, Kırşehir, Kolombiya",
                            BirthDate = new DateTime(1996, 9, 19, 12, 59, 58, 165, DateTimeKind.Local).AddTicks(2898),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4424),
                            FirstName = "Gökçen",
                            HireDate = new DateTime(2018, 5, 20, 19, 50, 17, 325, DateTimeKind.Local).AddTicks(6380),
                            LastName = "Kunt",
                            PhoneNumber = "+90-535-332-5-256",
                            Salary = 116.20m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            Address = "Bahçe Sokak 99b, Antalya, Kosta Rika",
                            BirthDate = new DateTime(1981, 2, 20, 4, 18, 5, 933, DateTimeKind.Local).AddTicks(5437),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4520),
                            FirstName = "Ayızdağ",
                            HireDate = new DateTime(2015, 8, 29, 20, 26, 4, 125, DateTimeKind.Local).AddTicks(8109),
                            LastName = "Kutlay",
                            PhoneNumber = "+90-564-329-4-525",
                            Salary = 134.07m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Address = "Lütfi Karadirek Caddesi 31, Hakkari, İran",
                            BirthDate = new DateTime(2000, 5, 6, 17, 57, 14, 66, DateTimeKind.Local).AddTicks(8365),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4631),
                            FirstName = "Başçı",
                            HireDate = new DateTime(2015, 5, 18, 8, 58, 13, 870, DateTimeKind.Local).AddTicks(2942),
                            LastName = "Evliyaoğlu",
                            PhoneNumber = "+90-095-307-11-27",
                            Salary = 129.42m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Address = "Harman Altı Sokak 429, Tunceli, Yeni Zelanda",
                            BirthDate = new DateTime(1969, 10, 11, 1, 25, 34, 534, DateTimeKind.Local).AddTicks(342),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4695),
                            FirstName = "Başkırt",
                            HireDate = new DateTime(2018, 1, 18, 17, 38, 7, 703, DateTimeKind.Local).AddTicks(2511),
                            LastName = "Erkekli",
                            PhoneNumber = "+90-929-253-08-87",
                            Salary = 127.65m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            Address = "Bahçe Sokak 50b, Konya, Jamaika",
                            BirthDate = new DateTime(1996, 11, 25, 17, 58, 17, 657, DateTimeKind.Local).AddTicks(1906),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4797),
                            FirstName = "Bayurku",
                            HireDate = new DateTime(2016, 9, 13, 13, 33, 57, 898, DateTimeKind.Local).AddTicks(557),
                            LastName = "Erkekli",
                            PhoneNumber = "+90-248-823-21-42",
                            Salary = 119.74m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            Address = "Sarıkaya Caddesi 9, Kocaeli, Zimbabve",
                            BirthDate = new DateTime(1971, 9, 16, 18, 38, 37, 782, DateTimeKind.Local).AddTicks(2141),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4892),
                            FirstName = "Basat",
                            HireDate = new DateTime(2018, 11, 18, 21, 53, 40, 990, DateTimeKind.Local).AddTicks(6147),
                            LastName = "Kutlay",
                            PhoneNumber = "+90-767-396-63-59",
                            Salary = 121.77m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            Address = "Menekşe Sokak 470, Diyarbakır, Moğolistan",
                            BirthDate = new DateTime(1975, 9, 10, 12, 49, 56, 189, DateTimeKind.Local).AddTicks(7065),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(4996),
                            FirstName = "Bulaçapan",
                            HireDate = new DateTime(2022, 12, 17, 15, 5, 4, 959, DateTimeKind.Local).AddTicks(233),
                            LastName = "Menemencioğlu",
                            PhoneNumber = "+90-860-181-7-394",
                            Salary = 129.14m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            Address = "Kekeçoğlu Sokak 5, Aksaray, Burkina Faso",
                            BirthDate = new DateTime(2001, 12, 8, 10, 23, 54, 333, DateTimeKind.Local).AddTicks(2086),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5064),
                            FirstName = "Gün",
                            HireDate = new DateTime(2015, 2, 3, 10, 33, 52, 894, DateTimeKind.Local).AddTicks(5283),
                            LastName = "Doğan ",
                            PhoneNumber = "+90-496-761-47-04",
                            Salary = 119.03m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            Address = "Köypınar Sokak 34b, Iğdır, Kuveyt",
                            BirthDate = new DateTime(1995, 5, 12, 10, 30, 21, 692, DateTimeKind.Local).AddTicks(2977),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5148),
                            FirstName = "Bıçkıcı",
                            HireDate = new DateTime(2014, 8, 13, 15, 9, 46, 549, DateTimeKind.Local).AddTicks(9931),
                            LastName = "Çevik",
                            PhoneNumber = "+90-887-223-52-19",
                            Salary = 141.72m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            Address = "Bandak Sokak 622, Ordu, Amerikan Samoa",
                            BirthDate = new DateTime(1976, 4, 23, 23, 22, 18, 808, DateTimeKind.Local).AddTicks(656),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5241),
                            FirstName = "Aksungur",
                            HireDate = new DateTime(2024, 1, 13, 15, 59, 56, 872, DateTimeKind.Local).AddTicks(8129),
                            LastName = "Tanrıkulu",
                            PhoneNumber = "+90-131-178-22-09",
                            Salary = 134.27m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            Address = "Afyon Kaya Sokak 56, Kütahya, Yemen",
                            BirthDate = new DateTime(1989, 9, 12, 6, 0, 31, 955, DateTimeKind.Local).AddTicks(1688),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5354),
                            FirstName = "Bangu",
                            HireDate = new DateTime(2016, 10, 30, 22, 26, 15, 198, DateTimeKind.Local).AddTicks(7536),
                            LastName = "Uluhan",
                            PhoneNumber = "+90-959-126-9-784",
                            Salary = 134.69m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            Address = "Bandak Sokak 25b, Tokat, Bahama Adaları",
                            BirthDate = new DateTime(1985, 6, 5, 3, 43, 16, 580, DateTimeKind.Local).AddTicks(4794),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5416),
                            FirstName = "Bozbörü",
                            HireDate = new DateTime(2020, 2, 27, 4, 10, 26, 267, DateTimeKind.Local).AddTicks(4224),
                            LastName = "Durmaz",
                            PhoneNumber = "+90-928-480-3-126",
                            Salary = 155.59m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            Address = "Sarıkaya Caddesi 48a, Niğde, Fransız Guyanası",
                            BirthDate = new DateTime(1973, 5, 15, 17, 25, 40, 757, DateTimeKind.Local).AddTicks(5829),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5506),
                            FirstName = "Kançı",
                            HireDate = new DateTime(2017, 6, 17, 20, 46, 43, 238, DateTimeKind.Local).AddTicks(195),
                            LastName = "Samancı",
                            PhoneNumber = "+90-564-395-29-11",
                            Salary = 159.73m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            Address = "Dar Sokak 7, Adıyaman, Moğolistan",
                            BirthDate = new DateTime(1992, 2, 10, 11, 15, 39, 123, DateTimeKind.Local).AddTicks(2943),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5596),
                            FirstName = "Aşantuğrul",
                            HireDate = new DateTime(2023, 9, 8, 7, 5, 56, 93, DateTimeKind.Local).AddTicks(1466),
                            LastName = "Barbarosoğlu",
                            PhoneNumber = "+90-371-292-9-764",
                            Salary = 166.68m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            Address = "Afyon Kaya Sokak 8, Erzincan, Cebelitarık, İngiltere",
                            BirthDate = new DateTime(2004, 4, 8, 6, 54, 44, 984, DateTimeKind.Local).AddTicks(3701),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5687),
                            FirstName = "Ayma",
                            HireDate = new DateTime(2016, 7, 11, 18, 11, 12, 219, DateTimeKind.Local).AddTicks(618),
                            LastName = "Köylüoğlu",
                            PhoneNumber = "+90-722-792-4-608",
                            Salary = 150.39m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            Address = "Barış Sokak 82c, Şırnak, Libya",
                            BirthDate = new DateTime(1981, 9, 1, 0, 24, 55, 752, DateTimeKind.Local).AddTicks(4809),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5748),
                            FirstName = "Amul",
                            HireDate = new DateTime(2021, 7, 13, 23, 38, 35, 719, DateTimeKind.Local).AddTicks(3651),
                            LastName = "Ekici",
                            PhoneNumber = "+90-860-126-84-28",
                            Salary = 167.15m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            Address = "Ülkü Sokak 31, Afyon, Malta",
                            BirthDate = new DateTime(1993, 11, 16, 4, 47, 54, 730, DateTimeKind.Local).AddTicks(3917),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5844),
                            FirstName = "Alpkutlu",
                            HireDate = new DateTime(2014, 7, 31, 12, 27, 32, 627, DateTimeKind.Local).AddTicks(6230),
                            LastName = "Erbay",
                            PhoneNumber = "+90-921-629-6-125",
                            Salary = 162.97m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            Address = "Köypınar Sokak 1, Sakarya, Madagaskar",
                            BirthDate = new DateTime(1991, 10, 20, 13, 2, 28, 75, DateTimeKind.Local).AddTicks(777),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5939),
                            FirstName = "Batuk",
                            HireDate = new DateTime(2018, 1, 29, 23, 5, 33, 612, DateTimeKind.Local).AddTicks(4213),
                            LastName = "Gürmen",
                            PhoneNumber = "+90-430-963-10-40",
                            Salary = 167.50m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            Address = "Fatih Sokak  54c, Çorum, Belize",
                            BirthDate = new DateTime(1990, 8, 21, 21, 42, 3, 719, DateTimeKind.Local).AddTicks(5157),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(5999),
                            FirstName = "Buluş",
                            HireDate = new DateTime(2021, 3, 27, 12, 27, 22, 55, DateTimeKind.Local).AddTicks(6250),
                            LastName = "Erginsoy",
                            PhoneNumber = "+90-501-979-88-51",
                            Salary = 148.87m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            Address = "Dar Sokak 61b, Aydın, Anguilla, İngiltere",
                            BirthDate = new DateTime(2001, 7, 19, 21, 54, 6, 84, DateTimeKind.Local).AddTicks(2386),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6080),
                            FirstName = "Çağru",
                            HireDate = new DateTime(2018, 11, 14, 11, 46, 41, 539, DateTimeKind.Local).AddTicks(1423),
                            LastName = "Babacan",
                            PhoneNumber = "+90-416-264-56-45",
                            Salary = 114.37m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            Address = "Lütfi Karadirek Caddesi 341, Kars, Wake Adaları, Amerika",
                            BirthDate = new DateTime(1972, 6, 13, 6, 41, 25, 540, DateTimeKind.Local).AddTicks(1268),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6182),
                            FirstName = "Avluç",
                            HireDate = new DateTime(2015, 12, 29, 2, 54, 57, 918, DateTimeKind.Local).AddTicks(3965),
                            LastName = "Tekand",
                            PhoneNumber = "+90-299-763-00-07",
                            Salary = 100.91m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            Address = "Dar Sokak 8, Aydın, Birleşik Arap Emirlikleri",
                            BirthDate = new DateTime(1978, 4, 8, 22, 10, 57, 208, DateTimeKind.Local).AddTicks(5553),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6306),
                            FirstName = "Altay",
                            HireDate = new DateTime(2020, 4, 23, 12, 58, 38, 106, DateTimeKind.Local).AddTicks(4160),
                            LastName = "Günday",
                            PhoneNumber = "+90-767-102-6-474",
                            Salary = 105.70m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            Address = "Bandak Sokak 1, Uşak, San Marino",
                            BirthDate = new DateTime(1968, 5, 30, 14, 30, 39, 167, DateTimeKind.Local).AddTicks(3177),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6368),
                            FirstName = "Boran",
                            HireDate = new DateTime(2020, 8, 26, 22, 43, 9, 939, DateTimeKind.Local).AddTicks(5208),
                            LastName = "Koç",
                            PhoneNumber = "+90-255-375-45-50",
                            Salary = 110.85m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            Address = "Mevlana Sokak 790, Sivas, Gine",
                            BirthDate = new DateTime(1978, 4, 15, 2, 13, 59, 7, DateTimeKind.Local).AddTicks(190),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6465),
                            FirstName = "Buluç",
                            HireDate = new DateTime(2018, 10, 10, 22, 42, 1, 381, DateTimeKind.Local).AddTicks(6487),
                            LastName = "Gürmen",
                            PhoneNumber = "+90-144-585-61-53",
                            Salary = 119.03m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            Address = "Okul Sokak 11, Mardin, Amerikan Samoa",
                            BirthDate = new DateTime(1978, 10, 7, 13, 44, 58, 716, DateTimeKind.Local).AddTicks(8639),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6555),
                            FirstName = "Açığ",
                            HireDate = new DateTime(2020, 1, 29, 18, 18, 10, 122, DateTimeKind.Local).AddTicks(9613),
                            LastName = "Bolatlı",
                            PhoneNumber = "+90-688-689-6-339",
                            Salary = 128.17m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            Address = "Sarıkaya Caddesi 12c, Giresun, Liechtenstein",
                            BirthDate = new DateTime(1972, 9, 14, 14, 3, 57, 308, DateTimeKind.Local).AddTicks(2671),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6652),
                            FirstName = "Akbörü",
                            HireDate = new DateTime(2021, 5, 13, 18, 41, 57, 880, DateTimeKind.Local).AddTicks(6122),
                            LastName = "Ertepınar",
                            PhoneNumber = "+90-062-967-4-859",
                            Salary = 116.11m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            Address = "30 Ağustos Caddesi 58b, Bitlis, Türkmenistan",
                            BirthDate = new DateTime(1971, 10, 26, 4, 34, 58, 743, DateTimeKind.Local).AddTicks(5063),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6716),
                            FirstName = "Ağalak",
                            HireDate = new DateTime(2015, 10, 16, 23, 41, 49, 893, DateTimeKind.Local).AddTicks(4117),
                            LastName = "Hamzaoğlu",
                            PhoneNumber = "+90-262-545-7-629",
                            Salary = 101.31m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            Address = "Atatürk Bulvarı 91, Eskişehir, Orta Afrika Cumhuriyeti",
                            BirthDate = new DateTime(1968, 6, 22, 1, 3, 6, 521, DateTimeKind.Local).AddTicks(2619),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6812),
                            FirstName = "Araboğa",
                            HireDate = new DateTime(2023, 4, 25, 22, 27, 10, 214, DateTimeKind.Local).AddTicks(3495),
                            LastName = "Sadıklar",
                            PhoneNumber = "+90-646-924-21-02",
                            Salary = 114.19m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            Address = "Atatürk Bulvarı 0, Bartın, Guyana",
                            BirthDate = new DateTime(2001, 10, 26, 6, 22, 5, 659, DateTimeKind.Local).AddTicks(7704),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6899),
                            FirstName = "Kırlangıç",
                            HireDate = new DateTime(2021, 1, 12, 2, 33, 6, 749, DateTimeKind.Local).AddTicks(2689),
                            LastName = "Polat",
                            PhoneNumber = "+90-130-862-7-569",
                            Salary = 123.14m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            Address = "Okul Sokak 85c, Kütahya, Saint Pierre ve Miquelon, Fransa",
                            BirthDate = new DateTime(1982, 5, 20, 3, 7, 9, 216, DateTimeKind.Local).AddTicks(5316),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(6961),
                            FirstName = "Basanyalavaç",
                            HireDate = new DateTime(2018, 4, 8, 15, 38, 34, 690, DateTimeKind.Local).AddTicks(826),
                            LastName = "Çağıran",
                            PhoneNumber = "+90-120-954-21-17",
                            Salary = 136.89m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            Address = "Fatih Sokak  66b, Muş, Güney Kore",
                            BirthDate = new DateTime(1998, 4, 6, 3, 31, 38, 234, DateTimeKind.Local).AddTicks(483),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(7040),
                            FirstName = "Esen",
                            HireDate = new DateTime(2018, 5, 29, 8, 56, 16, 875, DateTimeKind.Local).AddTicks(6962),
                            LastName = "Biçer",
                            PhoneNumber = "+90-196-709-2-419",
                            Salary = 121.15m,
                            Shift = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 42,
                            Address = "Mevlana Sokak 31a, Hakkari, Polonya",
                            BirthDate = new DateTime(1978, 8, 16, 9, 4, 6, 335, DateTimeKind.Local).AddTicks(7315),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(7134),
                            FirstName = "Erdeniözük",
                            HireDate = new DateTime(2017, 5, 10, 17, 57, 18, 487, DateTimeKind.Local).AddTicks(2050),
                            LastName = "Mayhoş",
                            PhoneNumber = "+90-242-144-6-127",
                            Salary = 121.83m,
                            Shift = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 43,
                            Address = "Bandak Sokak 97c, Isparta, Kamboçya",
                            BirthDate = new DateTime(1973, 4, 27, 11, 9, 35, 916, DateTimeKind.Local).AddTicks(5454),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(7249),
                            FirstName = "Balta",
                            HireDate = new DateTime(2020, 5, 2, 20, 36, 21, 244, DateTimeKind.Local).AddTicks(4019),
                            LastName = "Adıvar",
                            PhoneNumber = "+90-514-703-93-11",
                            Salary = 143.57m,
                            Shift = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 44,
                            Address = "İsmet Attila Caddesi 305, Düzce, Danimarka",
                            BirthDate = new DateTime(1990, 9, 13, 17, 17, 23, 679, DateTimeKind.Local).AddTicks(7638),
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 852, DateTimeKind.Local).AddTicks(7316),
                            FirstName = "Bükebuyruç",
                            HireDate = new DateTime(2021, 1, 31, 20, 18, 43, 52, DateTimeKind.Local).AddTicks(7339),
                            LastName = "Başoğlu",
                            PhoneNumber = "+90-603-474-02-48",
                            Salary = 156.56m,
                            Shift = 3,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.ExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExtraServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4384),
                            Description = "Günlük sınırsız spa kullanımı.",
                            Name = "Spa Kullanımı",
                            Price = 50m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4388),
                            Description = "24 saat oda servisi. Tüm yemek siparişleri dahildir.",
                            Name = "Oda Servisi",
                            Price = 30m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4395),
                            Description = "Minibardaki içecekler ve atıştırmalıklar dahil.",
                            Name = "Minibar Kullanımı",
                            Price = 20m,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4401),
                            Description = "Gidiş-dönüş özel araç transferi.",
                            Name = "Havalimanı Transferi",
                            Price = 100m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4405),
                            Description = "Konaklama süresince ücretsiz çamaşır ve kuru temizleme hizmeti.",
                            Name = "Çamaşırhane Hizmeti",
                            Price = 40m,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4428),
                            Description = "Ekstra günlük temizlik ve hijyen paketi.",
                            Name = "Günlük Oda Temizliği",
                            Price = 25m,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4432),
                            Description = "Özel şezlong ve plaj hizmetleri.",
                            Name = "Özel Plaj Alanı",
                            Price = 35m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("money");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4166),
                            Description = "Kahvaltı, öğle ve akşam yemeği dahil.",
                            Name = "Tam Pansiyon",
                            PriceMultiplier = 1.2m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 953, DateTimeKind.Local).AddTicks(4181),
                            Description = "Tüm yemekler, alkollü-alkolsüz içecekler ve otelin sunduğu belirli hizmetler dahil.",
                            Name = "Her Şey Dahil",
                            PriceMultiplier = 1.5m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.ReservationExtraService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExtraServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExtraServiceId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("HasAirConditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBalcony")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHairDryer")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMinibar")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTV")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("money");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7852),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 105.54m,
                            RoomNumber = "126",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7874),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 60.48m,
                            RoomNumber = "143",
                            RoomStatus = 2,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7880),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 102.88m,
                            RoomNumber = "187",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7886),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 83.38m,
                            RoomNumber = "184",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7890),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 130.30m,
                            RoomNumber = "149",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7896),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 110.70m,
                            RoomNumber = "161",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7900),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 106.35m,
                            RoomNumber = "171",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7905),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 127.12m,
                            RoomNumber = "103",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7909),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 110.87m,
                            RoomNumber = "184",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7913),
                            Floor = 1,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 131.15m,
                            RoomNumber = "157",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7921),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 180.53m,
                            RoomNumber = "268",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7927),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 161.50m,
                            RoomNumber = "280",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7931),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 185.29m,
                            RoomNumber = "267",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7981),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 181.42m,
                            RoomNumber = "288",
                            RoomStatus = 1,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7987),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 118.54m,
                            RoomNumber = "258",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(7993),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 159.53m,
                            RoomNumber = "256",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8001),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 128.04m,
                            RoomNumber = "237",
                            RoomStatus = 2,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8007),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 123.86m,
                            RoomNumber = "273",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8013),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 157.28m,
                            RoomNumber = "245",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8018),
                            Floor = 2,
                            HasAirConditioner = true,
                            HasBalcony = false,
                            HasHairDryer = true,
                            HasMinibar = false,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 116.62m,
                            RoomNumber = "234",
                            RoomStatus = 3,
                            RoomTypeId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8029),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 285.39m,
                            RoomNumber = "383",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8035),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 187.15m,
                            RoomNumber = "386",
                            RoomStatus = 3,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8040),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 161.55m,
                            RoomNumber = "326",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8044),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 223.41m,
                            RoomNumber = "314",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8047),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 278.08m,
                            RoomNumber = "300",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8051),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 194.37m,
                            RoomNumber = "390",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8055),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 202.63m,
                            RoomNumber = "302",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8059),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 286.90m,
                            RoomNumber = "356",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8062),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 286.90m,
                            RoomNumber = "341",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8066),
                            Floor = 3,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 155.03m,
                            RoomNumber = "396",
                            RoomStatus = 1,
                            RoomTypeId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8077),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 418.52m,
                            RoomNumber = "480",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8082),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 487.97m,
                            RoomNumber = "405",
                            RoomStatus = 3,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8086),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 444.58m,
                            RoomNumber = "406",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8091),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 442.88m,
                            RoomNumber = "479",
                            RoomStatus = 1,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8095),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 352.89m,
                            RoomNumber = "404",
                            RoomStatus = 3,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8099),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 331.73m,
                            RoomNumber = "429",
                            RoomStatus = 1,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8102),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 214.85m,
                            RoomNumber = "494",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8106),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 220.54m,
                            RoomNumber = "493",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8109),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 441.45m,
                            RoomNumber = "441",
                            RoomStatus = 2,
                            RoomTypeId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8113),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 362.78m,
                            RoomNumber = "468",
                            RoomStatus = 2,
                            RoomTypeId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 850, DateTimeKind.Local).AddTicks(8117),
                            Floor = 4,
                            HasAirConditioner = true,
                            HasBalcony = true,
                            HasHairDryer = true,
                            HasMinibar = true,
                            HasTV = true,
                            HasWifi = true,
                            PricePerNight = 1000m,
                            RoomNumber = "500",
                            RoomStatus = 1,
                            RoomTypeId = 5,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 848, DateTimeKind.Local).AddTicks(5041),
                            Description = "1 adet tek kişilik yatak. Balkon ve minibar bulunmaz. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Tek Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 848, DateTimeKind.Local).AddTicks(5061),
                            Description = "1 adet büyük (duble) yatak. Minibar bulunur. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Çift Kişilik (Duble)",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 848, DateTimeKind.Local).AddTicks(5063),
                            Description = "3 adet tek kişilik yatak. Balkon ve minibar bulunmaz. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Üç Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 848, DateTimeKind.Local).AddTicks(5065),
                            Description = "1 adet büyük (duble) yatak + 2 adet tek kişilik yatak. Balkon ve minibar bulunur. Klima, TV, saç kurutma makinesi ve WiFi mevcuttur.",
                            Name = "Dört Kişilik",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 2, 21, 4, 55, 55, 848, DateTimeKind.Local).AddTicks(5066),
                            Description = "Geniş ve lüks oda. Özel oturma alanı, büyük yatak, balkon, minibar, özel banyo ve lüks hizmetler. Klima, TV, saç kurutma makinesi, WiFi ve özel hizmetler mevcuttur.",
                            Name = "Kral Dairesi",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Entities.Models.AppUserProfile", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "AppUser")
                        .WithOne("AppUserProfile")
                        .HasForeignKey("Project.Entities.Models.AppUserProfile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Project.Entities.Models.Payment", b =>
                {
                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("Project.Entities.Models.Payment", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.HasOne("Project.Entities.Models.AppUser", "Reservations")
                        .WithMany("Reservations")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Project.Entities.Models.Employee", "Employee")
                        .WithMany("ManagedReservations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Package", "Package")
                        .WithMany("Reservations")
                        .HasForeignKey("PackageId");

                    b.HasOne("Project.Entities.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Package");

                    b.Navigation("Reservations");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Project.Entities.Models.ReservationExtraService", b =>
                {
                    b.HasOne("Project.Entities.Models.ExtraService", "ExtraService")
                        .WithMany("ReservationExtraServices")
                        .HasForeignKey("ExtraServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Models.Reservation", "Reservation")
                        .WithMany("ReservationExtraServices")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraService");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.HasOne("Project.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Project.Entities.Models.AppUser", b =>
                {
                    b.Navigation("AppUserProfile")
                        .IsRequired();

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Employee", b =>
                {
                    b.Navigation("ManagedReservations");
                });

            modelBuilder.Entity("Project.Entities.Models.ExtraService", b =>
                {
                    b.Navigation("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Package", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.Reservation", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("ReservationExtraServices");
                });

            modelBuilder.Entity("Project.Entities.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Project.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
